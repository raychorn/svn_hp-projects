<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 creationComplete="init()">
	
	<fx:Metadata>
		
		[DefaultMediator("com.hp.asi.hpic4vc.ui.views.Hpic4vc_certificateManagementMediator")]
		
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import assets.components.Hpic4vc_CertificateSigningRequest;
			import assets.components.Hpic4vc_GenerateCertificateManagement;
			import assets.components.Hpic4vc_InstallCertificate;
			import assets.components.Hpic4vc_ViewCertificate;
			
			import com.hp.asi.hpic4vc.ui.Hpic4vc_providerProxy;
			import com.hp.asi.hpic4vc.ui.utils.Helper;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			[Bindable]
			public var helpWindow:TitleWindow;
			
			[Bindable]
			public var serviceGuid:String;
			
			[Bindable]
			public var _proxy:Hpic4vc_providerProxy;
			
			[Bindable]
			public var isAuthorized:Boolean;
			
			[Bindable]
			private var isAuthorizedWatcher:ChangeWatcher;
			
			private function init():void {
				currentState = "Loading";
				isAuthorizedWatcher = ChangeWatcher.watch(this, ["isAuthorized"], dataAvailable);	
			}
			
			private function dataAvailable(event:Event):void {
				if(isAuthorized)
				{
					currentState = "Authorized"; 
				}
				else
				{
					currentState = "NotAuthorized";
				}
			}
			
			private function generateSelfSignedCert():void {
				var generateSelfSignedCert:Hpic4vc_GenerateCertificateManagement;
				generateSelfSignedCert = PopUpManager.createPopUp(this, Hpic4vc_GenerateCertificateManagement, true) as Hpic4vc_GenerateCertificateManagement;
				generateSelfSignedCert._proxy = _proxy;
				generateSelfSignedCert.serviceGuid = serviceGuid;
			}
			
			private function generateCertRequest():void {
				var certSigningReq:Hpic4vc_CertificateSigningRequest;
				certSigningReq = PopUpManager.createPopUp(this, Hpic4vc_CertificateSigningRequest, true) as Hpic4vc_CertificateSigningRequest;
				certSigningReq._proxy = _proxy;
				certSigningReq.serviceGuid = serviceGuid;
			}
			
			private function installCertificate():void {
				var installCert:Hpic4vc_InstallCertificate;
				installCert = PopUpManager.createPopUp(this, Hpic4vc_InstallCertificate, true) as Hpic4vc_InstallCertificate;	
				installCert._proxy = _proxy;
				installCert.serviceGuid = serviceGuid;
			}
			
			private function viewCertificate():void {
				var viewInstallCert:Hpic4vc_ViewCertificate;
				viewInstallCert = PopUpManager.createPopUp(this, Hpic4vc_ViewCertificate, true) as Hpic4vc_ViewCertificate;	
				viewInstallCert._proxy = _proxy;
				viewInstallCert.serviceGuid = serviceGuid;
			}
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout paddingLeft="15"
						  paddingRight="15"
						  paddingTop="15"
						  paddingBottom="15"/>
	</s:layout>
	
	<s:states>
		<s:State name="Loading"/>
		<s:State name="Authorized"/>
		<s:State name="NotAuthorized"/>
	</s:states>	
	
	<mx:VBox width="100%" height="100%" minHeight="0" minWidth="0">	
		
		<mx:Text styleName="gettingStartedTextFont" width="90%" text="{Helper.getString('Hpic4vc_CertificateManagement.mainText')}"/>
		
		<s:Label text=""/>	
		
		<mx:Text styleName="gettingStartedPagesHeaderText" text="{Helper.getString('Hpic4vc_CertificateManagement.certTitle')}"/>
		<mx:HRule width="100%"/>
		
		<s:VGroup x="0" y="45" height="100%" width="100%" includeIn="Loading">
			<s:Label text="{Helper.getString('loading')}" verticalCenter="0" />
		</s:VGroup>
		
		<s:VGroup x="0" y="45" height="100%" width="100%" includeIn="Authorized">
			<mx:Text styleName="gettingStartedTextFont" 
					 text="{Helper.getString('Hpic4vc_CertificateManagement.currentlyInstalledText')}"/>
			<s:Button width="310" label="{Helper.getString('Hpic4vc_CertificateManagement.viewCertButtonText')}" fontSize="15" click="viewCertificate()" buttonMode="true"/>
			<s:Label text=""/>
			<mx:Text styleName="gettingStartedTextFont" 
					 text="{Helper.getString('Hpic4vc_CertificateManagement.installCertTitle')}"/>
			
			<mx:HBox styleName="hBoxPadding">
				<s:Label styleName="certMgmtLabel"
						 text="{Helper.getString('Hpic4vc_CertificateManagement.numOneText')} "/>
				<s:Button width="310" label="{Helper.getString('Hpic4vc_CertificateManagement.generateCertButtonText')}" fontSize="15" click="generateSelfSignedCert()" buttonMode="true"/>
			</mx:HBox>
			<mx:Text styleName="certMgmtText"
					 text="{Helper.getString('Hpic4vc_CertificateManagement.firstNumTwoText')}"/>
			<s:Label text=""/>
			<mx:Text styleName="gettingStartedTextFont" 
					 text="{Helper.getString('Hpic4vc_CertificateManagement.generateSignCertTitle')}"/>
			
			<mx:HBox styleName="hBoxPadding">
				<s:Label styleName="certMgmtLabel" text="{Helper.getString('Hpic4vc_CertificateManagement.numOneText')} "/>
				<s:Button width="310" label="{Helper.getString('Hpic4vc_CertificateManagement.generateSignCertButtonText')}" fontSize="15" click="generateCertRequest()" buttonMode="true"/>
			</mx:HBox>
			<mx:Text width="99%" styleName="certMgmtText"
					 text="{Helper.getString('Hpic4vc_CertificateManagement.secondNumTwoText')}"/>
			<mx:Text styleName="certMgmtText"
					 text="{Helper.getString('Hpic4vc_CertificateManagement.numThreeText')}"/>
			
			<mx:HBox styleName="hBoxPadding">
				<s:Label styleName="certMgmtLabel" text="{Helper.getString('Hpic4vc_CertificateManagement.numFourText')} "/>
				<s:Button width="310" label="{Helper.getString('Hpic4vc_CertificateManagement.installCertButtonText')}" fontSize="15" click="installCertificate()" buttonMode="true"/>
			</mx:HBox>
			<mx:Text styleName="certMgmtText"
					 text="{Helper.getString('Hpic4vc_CertificateManagement.numFiveText')}"/>
			<!--mx:HBox styleName="hBoxPadding">
				<s:Label styleName="certMgmtLabel"
						 text="{Helper.getString('Hpic4vc_CertificateManagement.numSixText')}"/>
				<s:Button width="310" label="{Helper.getString('Hpic4vc_CertificateManagement.viewCertButtonText')}" fontSize="15" click="viewCertificate()" buttonMode="true"/>
			</mx:HBox-->
		</s:VGroup>
		
		<s:VGroup height="100%" width="100%" includeIn="NotAuthorized">
			<mx:Text text="{Helper.getString('noPermission')}" width="99%"/>
		</s:VGroup>
	</mx:VBox>
</s:Group>