<?xml version="1.0"?>

<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  creationComplete="init()" implements="assets.components.Hpic4vc_Overview_BaseComponent">
	
	<fx:Metadata>
		[Event(name="{com.vmware.ui.events.NavigationRequest.NAVIGATION_REQUEST}", type="com.vmware.ui.events.NavigationRequest")]
		[DefaultMediator("assets.components.Hpic4vc_Overview_ClusterMediator")]
	</fx:Metadata>
		
	<fx:Script>

		<![CDATA[
			import com.hp.asi.hpic4vc.ui.model.LabelValueListModel;
			import com.hp.asi.hpic4vc.ui.model.LabelValueModel;
			import com.hp.asi.hpic4vc.ui.utils.Helper;
			import com.hp.asi.hpic4vc.ui.views.Hpic4vc_manage_uiView;
			import com.hp.asi.hpic4vc.ui.views.Hpic4vc_uiView;
			import com.vmware.core.model.IResourceReference;
			import com.vmware.ui.events.NavigationRequest;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			
			private var dashlet_BaseMediator:Hpic4vc_Dashlet_BaseMediator = new Hpic4vc_Dashlet_BaseMediator();
			
			[Bindable]
			private var loading:String;
			[Bindable]
			public var _contextObject:IResourceReference;
			[Bindable]
			public var clusterSummary:LabelValueListModel;
			[Bindable]
			public var clusterSummaryDataWatcher:ChangeWatcher;
			[Bindable]
			public var noDataWatcher:ChangeWatcher;
			[Bindable]
			public var errorWatcher:ChangeWatcher;
			[Bindable]
			public var dataNotFound:String;
			[Bindable]
			public var errorFoundLabel:String;
			
			
			private function init():void
			{
				this.currentState = "loadingPortlet";
				clusterSummaryDataWatcher = ChangeWatcher.watch(this, ["clusterSummary"], clusterSummaryDataWatcherHandler);
				noDataWatcher = ChangeWatcher.watch(this, ["dataNotFound"], noInfoAvailable);
				errorWatcher = ChangeWatcher.watch(this, ["errorFoundLabel"], errorOccurred);
				loading = Helper.getString("loading");
			}
			
			private function clusterSummaryDataWatcherHandler(event:Event):void {
				clusterSummaryDataWatcher.unwatch();
				if (clusterSummary.lvList.length) { 
					this.currentState = "showClusterPortlet";
				}
				else {
					this.currentState = "errorLoadingPortlet";
				}
			}
			
			public function showPortlet(contextObject:IResourceReference) : void {
				this.visible = true;
				this._contextObject = contextObject;
			}
			
			public function onLinkClicked(event:MouseEvent, link:String):void {
				dashlet_BaseMediator.moreClicked(event, Hpic4vc_TabNameEnum.CLUSTER);
			}
			
			public function getLinks():ArrayCollection {
				return new ArrayCollection([Helper.getString("more")]);
			}
			
			private function errorOccurred(event:Event):void {
				currentState = "errorLoadingPortlet";
				invalidateDisplayList();
			}
			
			private function noInfoAvailable(event:Event):void {
				this.currentState = "dataNotFound";
				invalidateDisplayList();
			}
		]]>
		
	</fx:Script>
	
	
	<s:states>
		<s:State name="loadingPortlet"/>
		<s:State name="errorLoadingPortlet"/>
		<s:State name="showClusterPortlet"/>
		<s:State name="dataNotFound"/>
	</s:states>

	   <s:VGroup height="30" paddingTop="10" paddingLeft="10" includeIn="loadingPortlet" width="100%">
			<s:Label text="{loading}" verticalCenter="0" width="100%"/>
		</s:VGroup>
		
		<s:VGroup height="30" paddingTop="10" paddingLeft="10" includeIn="dataNotFound" width="100%">
			<s:Label text="{dataNotFound}" verticalCenter="0" paddingTop="5" width="100%"/>
		</s:VGroup>
		
		<s:VGroup paddingTop="10" paddingLeft="10" includeIn="dataNotFound" width="100%">
			<mx:Text width="100%" text="{errorFoundLabel}" styleName="errorMessage" />
		</s:VGroup>
			
		<s:VGroup x="0" y="0" height="100%" width="100%" includeIn="showClusterPortlet">
			<mx:HBox width="100%" height="100%" horizontalGap="-2">
				<mx:VBox width="100%" verticalGap="0">
					<mx:Repeater id="clusterinfoLabel" dataProvider="{clusterSummary.lvList}" >
						<mx:VBox verticalGap="0" styleName="portletVBoxValue"  width="100%">
							<mx:HBox horizontalGap="0" width="100%">
								<s:Label width="150" 
										 text="{(clusterinfoLabel.currentItem as LabelValueModel).label}" 
										 styleName="portletLabel"/>
								<s:Label width="100%"
										 text="{(clusterinfoLabel.currentItem as LabelValueModel).value}" 
										 styleName="portletText"/>
							</mx:HBox>
							<mx:HRule width="100%"/>
						</mx:VBox>
					</mx:Repeater>
				</mx:VBox>
			</mx:HBox>
		</s:VGroup>

</s:VGroup>

