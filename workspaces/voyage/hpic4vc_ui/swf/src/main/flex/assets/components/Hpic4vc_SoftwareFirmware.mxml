<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright 2012 Hewlett-Packard Development Company, L.P. -->
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   width="100%" height="100%"
		   xmlns:components="assets.components.*"
		   implements="assets.components.Hpic4vc_BaseComponent"
		   >
	
	<!-- Metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<fx:Metadata>
		[DefaultMediator("assets.components.Hpic4vc_SoftwareFirmwareMediator")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.hp.asi.hpic4vc.ui.model.TabModel;
			import com.hp.asi.hpic4vc.ui.views.Hpic4vc_manage_uiView;
			import com.vmware.core.model.IResourceReference;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			
			[Bindable]
			private var subTabs:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var _contextObject:IResourceReference;
			
			[Bindable]
			public var _baseMediator:Hpic4vc_BaseMediator;
			[Bindable]
			private var host:String;
			private var hpic4vc_manage_uiView:Hpic4vc_manage_uiView;
			
			public function show (contextObject:IResourceReference) : void {
				this.visible = true;
				this._contextObject = contextObject;
			}
			
			public function showManage(contextObject:IResourceReference, uiView:Hpic4vc_manage_uiView):void
			{
				hpic4vc_manage_uiView = uiView;
				host= hpic4vc_manage_uiView.objReferenceName;
				init();
			}
			
			private function init():void
			{
				var softwareFirmwareDetail:TabModel = new TabModel();
				softwareFirmwareDetail.displayNameValue = "Details";
				softwareFirmwareDetail.displayNameKey = "softwareFirmwareDetail";
				softwareFirmwareDetail.component = "assets.components.Hpic4vc_SoftwareFirmware_Detail";
				subTabs.addItem(softwareFirmwareDetail);
				if(hpic4vc_manage_uiView.showStatusMessagesTab){
				
					if(hpic4vc_manage_uiView.objReferenceName.indexOf("Host")!= -1){
						var softwareFirmwareStatusUpdate:TabModel = new TabModel();
						softwareFirmwareStatusUpdate.displayNameValue = "Status Update ";
						softwareFirmwareStatusUpdate.displayNameKey = "softwareFirmwareStatusUpdate";
						softwareFirmwareStatusUpdate.component = "assets.components.Hpic4vc_SmartComponentUpdate_StatusMessages";
						subTabs.addItem(softwareFirmwareStatusUpdate); 
					}else {
						var softwareFirmwareClusterStatusUpdate:TabModel = new TabModel();
						softwareFirmwareClusterStatusUpdate.displayNameValue = "Status Update ";
						softwareFirmwareClusterStatusUpdate.displayNameKey = "softwareFirmwareClusterStatusUpdate";
						softwareFirmwareClusterStatusUpdate.component = "assets.components.Hpic4vc_FirmwareStatusMessages";
						subTabs.addItem(softwareFirmwareClusterStatusUpdate); 
					}
				
				}
				
			}
			
			private function instantiateUsingClassName(className:String):* {
				var classToInstantiate : Class = getDefinitionByName(className) as Class;
				var myClassFactory : ClassFactory = new ClassFactory(classToInstantiate);
				var myObjectInstance : * = myClassFactory.newInstance();
				return myObjectInstance;
			}
			
			protected function tabBar_itemClickHandler(event:ItemClickEvent):void
			{
				var tabComponentName:String = (event.item as TabModel).component;
				var tab:* = instantiateUsingClassName(tabComponentName);
				
				tab.show(_contextObject);
				
				canvas.removeAllChildren();
				canvas.addChild(tab);
				Hpic4vc_BaseMediator.tab_Clicked = null;
			}
			
			protected function onTabInit(event:FlexEvent):void
			{
				for each (var item:TabModel in subTabs)
				{
					if(item.displayNameKey==hpic4vc_manage_uiView.softwareFirmwareSubTabSelectedValue)
					{
						var itemClickEVent:ItemClickEvent = new ItemClickEvent(ItemClickEvent.ITEM_CLICK);
						itemClickEVent.item = item;
						tabBar.dispatchEvent(itemClickEVent);
						tabBar.selectedIndex = subTabs.getItemIndex(item);
					}
				}
			}
			
		]]>
	</fx:Script>	
	
	
	<!-- UI components ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<mx:states>
		<mx:State name="loadingData"/>
		<mx:State name="errorFound"/>
	</mx:states>
	
	<mx:Canvas id="canvas"
			   x="0" y="35"
			   width="100%" height="100%"
			   borderVisible="false">
		
	</mx:Canvas>
	
	<mx:ToggleButtonBar id="tabBar"
						dataProvider="{subTabs}" 
						labelField="displayNameValue"
						itemClick="tabBar_itemClickHandler(event)"
						height="25" 
						styleName="buttonBar"
						buttonMode="true"
						creationComplete="onTabInit(event)"
						/> 
	
</mx:Canvas>