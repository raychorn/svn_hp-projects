<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright 2012 Hewlett-Packard Development Company, L.P. -->
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   width="100%" height="100%"
		   creationComplete="init()"
		   implements="assets.components.Hpic4vc_BaseComponent">
	
	<fx:Metadata>
		[DefaultMediator("assets.components.Hpic4vc_ClusterMediator")]
	</fx:Metadata>
	
	<fx:Script>
		
		<![CDATA[
			import com.hp.asi.hpic4vc.ui.model.ClusterDetailModel;
			import com.hp.asi.hpic4vc.ui.utils.Helper;
			import com.vmware.core.model.IResourceReference;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.effects.easing.Bounce;
			import mx.effects.easing.Quartic;
		
		
		
		[Bindable]
		public var dataNotFound:String;
		
		[Bindable]
		public var errorFound:String;
		
		[Bindable]
		public var clusterDetail:ClusterDetailModel;
		
		[Bindable]
		public var hostDetailDataWatcher:ChangeWatcher;
		
		[Bindable]
		public var errorFoundWatcher:ChangeWatcher;
		
		[Bindable]
		public var _contextObject:IResourceReference;
		
		[Bindable]
		public var dataNotFoundWatcher:ChangeWatcher;
		
		[Bindable]
		private var loading:String;
		
		public function show (contextObject:IResourceReference) : void {
			this.visible = true;
			this._contextObject = contextObject;
		}
		
		private function init():void{
			errorFound = "";
			dataNotFound = "";
			this.currentState = "loadingData";
			hostDetailDataWatcher = ChangeWatcher.watch(this, ["clusterDetail"], showDetailHandler);
			errorFoundWatcher = ChangeWatcher.watch(this, ["errorFound"], errorFoundHandler);
			dataNotFoundWatcher = ChangeWatcher.watch(this, ["dataNotFound"], dataNotFoundHandler);
			loading = Helper.getString("loading");
		}
		
		private function showDetailHandler(event:Event):void {
			currentState = "showDetail";
			invalidateDisplayList();
			//resizeDataGridColumns();
		}
		
		private function errorFoundHandler(event:Event):void {
			currentState = "errorFound";
			invalidateDisplayList();
		}
		
		private function dataNotFoundHandler(event:Event):void {
			currentState = "dataNotFound";
			invalidateDisplayList();
		}
			
		]]>
		
	</fx:Script>		
	
	<mx:states>
		<mx:State name="loadingData"/>
		<mx:State name="errorFound"/>
		<mx:State name="showDetail"/>
		<mx:State name="dataNotFound"/>
	</mx:states>
	
	<mx:HBox height="30" includeIn="loadingData">
		<s:Label text="{loading}" verticalCenter="0" />					 
	</mx:HBox>
	
	<mx:HBox height="30" includeIn="dataNotFound">
		<s:Label text="{dataNotFound}"/>					 
	</mx:HBox>
	
	<mx:HBox height="30" includeIn="errorFound">
		<mx:Text width="100%" id="errorId" text="{errorFound}" styleName="errorMessage" />					 
	</mx:HBox>
	  <mx:VBox width="100%" height="100%" verticalGap="1">
		<mx:AdvancedDataGrid id="clusterDetailGrid" variableRowHeight="true" width="100%"
							 height="97%" folderClosedIcon="{null}" folderOpenIcon="{null}" sortExpertMode="true" >
			<mx:dataProvider>
				<mx:HierarchicalData source="{clusterDetail.hosts}"    />
			</mx:dataProvider>
			<mx:columns>
				<mx:AdvancedDataGridColumn dataField="vmware_name" headerText="VMWare Host Name" sortable="false"/>
				<mx:AdvancedDataGridColumn dataField="ilo_server_name" headerText="Server Name" sortable="false"/>
				<mx:AdvancedDataGridColumn dataField="product_name" headerText="Product Name" sortable="false"/>
				<mx:AdvancedDataGridColumn dataField="total_cpu" headerText="CPUs" sortable="false"/>
				<mx:AdvancedDataGridColumn dataField="total_memory" headerText="Total Memory" sortable="false"/>
				<mx:AdvancedDataGridColumn dataField="total_nics" headerText="Total NICS" sortable="false"/>
				<mx:AdvancedDataGridColumn dataField="total_storage" headerText="Total Smart Array" sortable="false"/>
				<mx:AdvancedDataGridColumn dataField="power_cost_advantage" headerText="Power Cost Advantage*" sortable="false"/>
			</mx:columns> 
			
			<mx:rendererProviders>            
				<mx:AdvancedDataGridRendererProvider 
					depth="2"
					renderer="assets.components.ClusterRenderer" 
					columnIndex="0"
					columnSpan="0" />         
			</mx:rendererProviders>   
		</mx:AdvancedDataGrid>
	    
		<mx:HBox id="theBox" backgroundColor="#eeeeee" width="100%" height="2%"
				 paddingLeft="3" paddingRight="3"  paddingBottom="3" paddingTop="3"
				 borderStyle="solid" 
				 cornerRadius="3">
			<mx:Label text="* The Power Cost Advantage is the configured cost per kWh * average power * duration of the last server standby event"/>
		</mx:HBox>	
	  </mx:VBox>
	
</mx:Canvas>
