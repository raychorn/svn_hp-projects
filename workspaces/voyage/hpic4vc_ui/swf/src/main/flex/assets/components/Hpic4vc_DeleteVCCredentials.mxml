<?xml version="1.0" encoding="utf-8"?>

<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   close="removePopUp();"
			   creationComplete="handleCreationComplete();" styleName="refreshPopUp"
			   title="{Helper.getString('deleteRecord.label')}"
			   buttonMode="true">
	
	<fx:Script>
		<![CDATA[
			import com.hp.asi.hpic4vc.ui.Hpic4vc_providerProxy;
			import com.hp.asi.hpic4vc.ui.model.DataGridWrapper;
			import com.hp.asi.hpic4vc.ui.model.StringModel;
			import com.hp.asi.hpic4vc.ui.model.TableModel;
			import com.hp.asi.hpic4vc.ui.views.Hpic4vc_vCenterCredentials;
			import com.vmware.flexutil.events.MethodReturnEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CloseEvent;
			
			[Bindable]
			public var _proxy:Hpic4vc_providerProxy;
			
			[Bindable]
			public var serviceGuid:String;
			
			[Bindable]
			public var refreshData:Hpic4vc_vCenterCredentials;
			
			[Bindable]
			public var currentData:ArrayCollection;
						
			import com.hp.asi.hpic4vc.ui.utils.Helper;
			
			import mx.managers.PopUpManager;
			
			private function handleCreationComplete():void {
				// Center the TitleWindow container 
				// over the control that created it.
				PopUpManager.centerPopUp(this);
			}
			
			private function handleDelete():void {
				if (currentData.length > 0) {
					_proxy.deleteVCCredential(serviceGuid, currentData[0].Hostname, currentData[0].Username, currentData[0].rowId, onDeleteVCCredentials);
					deleteId.enabled = false;
					cancelId.enabled = false;
					removePopUp();
				} 
			}
			
			private function onDeleteVCCredentials(e:MethodReturnEvent):void{
				var stringModel:StringModel = e.result as StringModel;
				if (stringModel.errorMessage != null)
					Alert.show(stringModel.errorMessage);
				else
					Alert.show(stringModel.data, null, Alert.OK, null, handleOk);
			//	removePopUp();
			}
			
			private function handleOk(event:CloseEvent):void {
				refreshData.refreshDataGrid();
			}
			
			private function removePopUp():void {
				PopUpManager.removePopUp(this);
			}
		]]>
	</fx:Script>
	
	
	<mx:Text text="{Helper.getString('deleteRecord.text')}"/>
	<s:controlBarContent>
		<s:Spacer width="99%"/> 
		<s:Button id="deleteId" label="{Helper.getString('deleteLabel')}" click="handleDelete();" enabled="true" buttonMode="true"/>
		<s:Button id="cancelId" label="{Helper.getString('cancelLabel')}" click="removePopUp();" enabled="true" buttonMode="true"/>
	</s:controlBarContent>
</s:TitleWindow>

