<?xml version="1.0"?>

<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:s="library://ns.adobe.com/flex/spark"
				width="350" height="150" close="cancelClicked();" horizontalScrollPolicy="off"
				styleName="refreshPopUp" verticalScrollPolicy="off"
				creationComplete="init()">
	
	<fx:Script>

		<![CDATA[
			import com.hp.asi.hpic4vc.ui.Hpic4vc_storage_providerProxy;
			import com.hp.asi.hpic4vc.ui.model.RefreshCacheModel;
			import com.hp.asi.hpic4vc.ui.utils.Helper;
			import com.vmware.flexutil.events.MethodReturnEvent;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			[Bindable]
			public var objReferenceId:String;
			[Bindable]
			public var estRemainingTimeMessage:String;
			[Bindable]
			public var isPopulating:Boolean;
			[Bindable]
			public var _hpic4vcHeader:Hpic4vc_Header;
			[Bindable]
			public var _proxyStorage:Hpic4vc_storage_providerProxy;
			
			[Bindable]
			private var infoLabel:String = Helper.getString('refreshInfo');
			[Bindable]
			private var continueLabel:String = Helper.getString('continueLabel');
			[Bindable]
			private var continueToolTip:String = Helper.getString('continueToolTip');
			[Bindable]
			private var restartLabel:String = Helper.getString('restartLabel');
			[Bindable]
			private var restartToolTip:String = Helper.getString('restartToolTip');
			[Bindable]
			private var cancelLabel:String = Helper.getString('cancelLabel');
			[Bindable]
			private var cancelToolTip:String = Helper.getString('cancelToolTip');
			
			private function init():void {
				if (isPopulating == false) {
					restartButton.enabled = true;
				} 
			}
			
			private function getRefreshStatus():void {
				if (_proxyStorage != null) {
					// Get the Refresh Status.
					var refreshStatus:RefreshCacheModel = 
						_proxyStorage.getRefreshCacheStatus(objReferenceId,
							onUpdatingRefreshCache) as RefreshCacheModel;
				}
			}
			
			private function onUpdatingRefreshCache(event:MethodReturnEvent):void {
				
				if (event == null || event.result == null) {
					_hpic4vcHeader.refreshStatusSummary = Helper.getString('errorOccurred');
					return;
				} else if (event.error != null) {
					_hpic4vcHeader.refreshStatusSummary = event.error.message;
					return;
				}
				
				var refreshStatus:RefreshCacheModel = event.result as RefreshCacheModel;
				isPopulating 			= refreshStatus.isPopulating;
				estRemainingTimeMessage = refreshStatus.estimatedTimeLabel 
					+ refreshStatus.remainingTime;
				_hpic4vcHeader.refreshStatusSummary	= refreshStatus.summary;
			}
			
			private function continueClicked():void {
				// Do nothing.  Let the current refresh operation to continue.
				PopUpManager.removePopUp(this);
				getRefreshStatus();
			}
			
			private function restartClicked():void {
				// Call the refresh service to restart.
				_proxyStorage.restartRefreshCache(objReferenceId, onUpdatingRefreshCache);
				PopUpManager.removePopUp(this);
			}
			
			private function cancelClicked():void {
				// Call the refresh service to cancel. 
				_proxyStorage.cancelRefreshCache(objReferenceId, onUpdatingRefreshCache);
				PopUpManager.removePopUp(this);
			}
		]]>
		
	</fx:Script>
	

	
	<s:VGroup x="10" y="20" width="347" height="70">
		<s:Label id="infoLabelId" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10" text="{infoLabel}"/>
		<s:Label id="estRemainingTimeLabelId" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10" text="{estRemainingTimeMessage}"/>
	</s:VGroup>
	
	<s:HGroup x="0" y="78" width="350" height="40">
		<mx:Canvas x="0" y="78" width="350" height="40" styleName="refreshPopup">
			
			<s:Button id="continueButtonId" 
					  x="109" y="9" 
					  label="{continueLabel}" 
					  toolTip="{continueToolTip}"
					  click="continueClicked();"/>
			<s:Button id="restartButton"
					  x="188" y="9"
					  label="{restartLabel}" 
					  toolTip="{restartToolTip}"
					  click="restartClicked();"
					  enabled="false" />
			<s:Button id="cancelButton"
					  x="266" y="9" 
					  label="{cancelLabel}" 
					  toolTip="{cancelToolTip}"
					  click="cancelClicked();"/>
		</mx:Canvas>
	</s:HGroup>
</mx:TitleWindow>