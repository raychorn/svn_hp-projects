<?xml version="1.0"?>

<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  creationComplete="init()" 
          implements="assets.components.Hpic4vc_Overview_BaseComponent">

	<fx:Metadata>
		[Event(name="{com.vmware.ui.events.NavigationRequest.NAVIGATION_REQUEST}", type="com.vmware.ui.events.NavigationRequest")]
		[DefaultMediator("assets.components.Hpic4vc_Overview_SoftwareFirmwareMediator")]
	</fx:Metadata>

	<fx:Script>

		<![CDATA[
			import com.hp.asi.hpic4vc.ui.utils.Helper;
			import com.hp.asi.hpic4vc.ui.views.Hpic4vc_manage_uiView;
			import com.hp.asi.hpic4vc.ui.views.Hpic4vc_uiView;
			import com.vmware.core.model.IResourceReference;
			import com.vmware.ui.events.NavigationRequest;
			
			import flash.utils.flash_proxy;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
						
			[Bindable]
			public var dataProvider:ArrayCollection;		
			[Bindable]
			public var columns:Array;
			[Bindable]
			public var noInfoFoundLabel:String;
			[Bindable]
			public var errorFoundLabel:String;
						
			[Bindable]
			public var _contextObject:IResourceReference;
			
			[Bindable]
			private var loading:String;
			
			[Bindable]
			private var errorWatcher:ChangeWatcher;
			
			[Bindable]
			public var swfwSummaryDataWatcher:ChangeWatcher;

			[Bindable]
			private var noInfoFoundWatcher:ChangeWatcher;
			
			[Bindable]
			private var dashlet_BaseMediator:Hpic4vc_Dashlet_BaseMediator = new Hpic4vc_Dashlet_BaseMediator();
			
			public function showPortlet(contextObject:IResourceReference) : void {
				this.visible = true;
				this._contextObject = contextObject;
			}
			
			public function onLinkClicked(event:MouseEvent, link:String):void {
				dashlet_BaseMediator.moreClicked(event, Hpic4vc_TabNameEnum.SOFTWAREFIRMWARE);
			}
			
			public function getLinks():ArrayCollection {
				return new ArrayCollection([Helper.getString("more")]);
			}
			
			private function swfwSummaryDataWatcherHandler(event:Event):void {
			
				currentState = "DataAvailable";
				invalidateDisplayList();
				swfwSummaryDataWatcher.unwatch();
				errorWatcher.unwatch();
			}
			
			private function init():void
			{
				this.currentState 		= "DataLoading";
				swfwSummaryDataWatcher 	= ChangeWatcher.watch(this, ["dataProvider"], swfwSummaryDataWatcherHandler);
				noInfoFoundWatcher   	= ChangeWatcher.watch(this, ["noInfoFoundLabel"], noInfoAvailable);
				errorWatcher  			= ChangeWatcher.watch(this, ["errorFoundLabel"], errorOccurred);
				loading     		    = Helper.getString("loading");
			}
			private function errorOccurred(event:Event):void {
				currentState = "DataError";
				invalidateDisplayList();
			}
			
			private function noInfoAvailable(event:Event):void {
				this.currentState = "NoInfoAvailable";
				invalidateDisplayList();
			}
		]]>
		
	</fx:Script>
	
	<s:states>
		<s:State name="DataLoading"/>
		<s:State name="DataError"/>
		<s:State name="DataAvailable"/>
		<s:State name="NoInfoAvailable"/>
	</s:states>
	
	<s:VGroup x="10" y="20" width="100%" height="100%">
		
		<mx:VBox height="30" includeIn="DataLoading" width="100%" paddingTop="10" paddingLeft="10">
			<mx:Label text="{loading}" verticalCenter="0" width="100%"/>
		</mx:VBox>
		
		<mx:VBox height="30" includeIn="NoInfoAvailable" width="100%" paddingTop="10" paddingLeft="10">
			<mx:Label text="{noInfoFoundLabel}" verticalCenter="0" width="100%"/>
		</mx:VBox>
		
		<mx:VBox includeIn="DataError" width="100%" paddingTop="10" paddingLeft="10">
			<mx:Text width="100%" text="{errorFoundLabel}" styleName="errorMessage"/>
		</mx:VBox>

		<mx:AdvancedDataGrid id="sfDatagridId" includeIn="DataAvailable" variableRowHeight="true" wordWrap="true"
					 borderVisible="true" 
					 columns="{columns}"
					 width="100%"
					 height="100%"
					 dataProvider="{dataProvider}" 
					 selectable="false"
					 styleName="overviewPortletDatagrid"
				     sortExpertMode="true"
                     sortableColumns="false"
					 rowCount="{(dataProvider.length)}"/>
	</s:VGroup>
</s:VGroup>