<?xml version="1.0" encoding="utf-8"?>

<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   close="PopUpManager.removePopUp(this);"
			   creationComplete="handleCreationComplete();" styleName="refreshPopUp"
			   title="Delete Credentials">
	
	<fx:Script>
		<![CDATA[
			import com.hp.asi.hpic4vc.ui.Hpic4vc_server_providerProxy;
			import com.hp.asi.hpic4vc.ui.views.Hpic4vc_serverCredentials;
			import com.vmware.flexutil.events.MethodReturnEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			
			[Bindable]
			public var _proxy:Hpic4vc_server_providerProxy;
			[Bindable]
			public var serviceGuid:String;
			[Bindable]
			public var currentData:ArrayCollection;
			
			[Bindable]
			public var refreshData:Hpic4vc_serverCredentials;
			
			import com.hp.asi.hpic4vc.ui.utils.Helper;
			
			import mx.managers.PopUpManager;
			
			private function handleCreationComplete():void {
				// Center the TitleWindow container 
				// over the control that created it.
				PopUpManager.centerPopUp(this);
			}
			
			private function handleButtonClick(e:Event):void {
				// Check credentials (not shown) then remove pop up.
				PopUpManager.removePopUp(this);
				// Check credentials (not shown) then remove pop up.
				if (e.target.id == "submit"){
					var data:String = "oper=del" + ":host=" + currentData[0].Host + ":username=" + currentData[0].Username + ":id=" + currentData[0].UniqueID;
					_proxy.updateServerCredentials(serviceGuid, data, onCredentialsDelete);
				}
				else
					PopUpManager.removePopUp(this);
			}
			
			private function onCredentialsDelete(e:MethodReturnEvent):void{
				if (e.result && e.result.errorMessage)
					Alert.show(e.result.errorMessage);
				else{
					Alert.show(Helper.getString('ALERT_DEPLOYMENT_CONFIGURATION_DELETE_SUCCESS'), null, Alert.OK, null, handleOk);
					PopUpManager.removePopUp(this);
//					FlexGlobals.topLevelApplication.dispatchEvent(new AddOrDeleteCredentialsEvent(AddOrDeleteCredentialsEvent.UPDATE_CREDENTIALS));
				}
			}
			
			private function handleOk(event:CloseEvent):void {
				if (refreshData != null) {
					refreshData.updateCredentials();
				}
			}
		]]>
	</fx:Script>
	
	<s:VGroup>
		<mx:Text text="Delete selected record(s)?"/>
		<s:Form id="delCred">
			<s:FormItem id="hostLabel" label="{Helper.getString('LABEL_HOST')}" width="50" enabled="false">
				<s:TextInput text="{currentData.getItemAt(0).Host}"/>
			</s:FormItem>             
			<s:FormItem id="userNameLabel" label="{Helper.getString('LABEL_USERNAME')}" width="50" enabled="false">
				<s:TextInput text="{currentData.getItemAt(0).Username}"/>
			</s:FormItem> 
			
			<s:FormItem id="pwTypeLabel" label="{Helper.getString('LABEL_TYPE')}" width="50" enabled="false">
				<s:TextInput text="{currentData.getItemAt(0).Type}" />
			</s:FormItem> 
		</s:Form>
	</s:VGroup>
	<s:controlBarContent>
		<s:Spacer width="99%"/> 
			<mx:Button id="submit" label="{Helper.getString('LABEL_DELETE')}" click="handleButtonClick(event);"
					   paddingLeft="7" buttonMode="true"/>
			<mx:Button id="cancel" label="{Helper.getString('cancelLabel')}" click="handleButtonClick(event);"
					   paddingLeft="7" buttonMode="true"/>
	</s:controlBarContent>
	
	
</s:TitleWindow>

