<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 creationComplete="init()" implements="assets.components.Hpic4vc_Overview_BaseComponent">
		
	<fx:Metadata>
		[Event(name="{com.vmware.ui.events.NavigationRequest.NAVIGATION_REQUEST}", type="com.vmware.ui.events.NavigationRequest")]
		[DefaultMediator("assets.components.Hpic4vc_Overview_NetworkingMediator")]
	</fx:Metadata>

    <fx:Script>
        <![CDATA[
			import com.hp.asi.hpic4vc.ui.model.DataGridWrapper;
			import com.hp.asi.hpic4vc.ui.model.TableModel;
			import com.hp.asi.hpic4vc.ui.utils.Helper;
			import com.hp.asi.hpic4vc.ui.views.Hpic4vc_manage_uiView;
			import com.hp.asi.hpic4vc.ui.views.Hpic4vc_uiView;
			import com.vmware.core.model.IResourceReference;
			import com.vmware.ui.events.NavigationRequest;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			
            [Bindable]
            public var summaryPortletData:TableModel;
            [Bindable]
            public var networkSummaryPortletData:DataGridWrapper;
            [Bindable]
            public var summaryPortletEventName:String;

            [Bindable]
            public var hostDetailDataWatcher:ChangeWatcher;
			
			[Bindable]
			public var _contextObject:IResourceReference;
			[Bindable]
			public var dataNotFound:String = Helper.getString('Overview.InformationNotFound');
			[Bindable]
			public var errorFoundLabel:String;
			[Bindable]
			private var loading:String;
			[Bindable]
			private var noInfoFoundWatcher:ChangeWatcher;
			[Bindable]
			private var errorWatcher:ChangeWatcher;			
			[Bindable]
			private var isBL:Boolean;
			
			private var dashlet_BaseMediator:Hpic4vc_Dashlet_BaseMediator = new Hpic4vc_Dashlet_BaseMediator();
			
			public function showPortlet(contextObject:IResourceReference) : void {
				this.visible = true;
				this._contextObject = contextObject;
				if(dashlet_BaseMediator.getManageView() && dashlet_BaseMediator.getManageView().productInfo != null)
					isBL = dashlet_BaseMediator.getManageView().productInfo.indexOf("BL",0) > -1;
			}
			
			public function onLinkClicked(event:MouseEvent, link:String):void {
				if (link == Helper.getString("more")) {
					dashlet_BaseMediator.moreClicked(event, Hpic4vc_TabNameEnum.NETWORKING);
				} else 
					dashlet_BaseMediator.moreClicked(event, Hpic4vc_TabNameEnum.NETWORKDIAGRAM);
			}
			
			public function getLinks():ArrayCollection {
				if (isBL) {
					return new ArrayCollection([Helper.getString("more"), Helper.getString("networkDiagram")]);
				} else return new ArrayCollection([Helper.getString("more")]);
			}
			
            private function init():void{
				this.currentState = "loadingPortlet";
                hostDetailDataWatcher = ChangeWatcher.watch(this, ["summaryPortletData"], updateNetworkPortletData);
				noInfoFoundWatcher   = ChangeWatcher.watch(this, ["dataNotFound"], noInfoAvailable);
				errorWatcher  		 = ChangeWatcher.watch(this, ["errorFoundLabel"], errorOccurred);
				loading = Helper.getString("loading");
            }
            
            private function updateNetworkPortletData(event:Event):void{
				hostDetailDataWatcher.unwatch();
				
				networkSummaryPortletData = Helper.createDataGrid(summaryPortletData);
				if (networkSummaryPortletData != null) {
	                for (var i:int=0; i<networkSummaryPortletData.columns.length; i++){
	                    AdvancedDataGridColumn(networkSummaryPortletData.columns[i]).width = 82;
	                }
				}

				if (networkSummaryPortletData != null && networkSummaryPortletData.columns != null) {
					if (networkSummaryPortletData.columns.length) { 
						this.currentState = "showInfraPortlet";
					}
				}
				else {
					this.currentState = "errorLoadingPortlet";
				}
			}

			// Ideally this method should not exist now
			protected function moreClicked(event:MouseEvent):void
			{
				var baseMediator:Hpic4vc_BaseMediator = new Hpic4vc_BaseMediator();
				baseMediator.setTabClickedInfo("networkingTab");
				var manage_uiView:Hpic4vc_manage_uiView = baseMediator.getManageView();
				var e:NavigationRequest = new NavigationRequest();
				e.context = _contextObject;
				e.targetViewUid = baseMediator.getManageMoreLinkURLs(_contextObject);;
				dispatchEvent(e);
				if(manage_uiView != null)
					manage_uiView.component_moreOnNetworkingClicked(event);
			}   
			
			/*	
			protected function networkDiagramClicked(event:MouseEvent):void
			{
				hpic4vc_manage_uiView.networkDiagramHandler(event)
			}   
			*/
			
			private function noInfoAvailable(event:Event):void {
				this.currentState = "NoInfoAvailable";
				invalidateDisplayList();
			}
			
			private function errorOccurred(event:Event):void {
				this.currentState = "errorLoadingPortlet";
				invalidateDisplayList();
			}
			
        ]]>
    </fx:Script>
	<s:states>
		<s:State name="loadingPortlet"/>
		<s:State name="errorLoadingPortlet"/>
		<s:State name="showInfraPortlet"/>
		<s:State name="NoInfoAvailable"/>		
	</s:states>
	
	<s:VGroup x="10" y="20" width="100%" 
			  paddingLeft="10" paddingRight="10"
			  paddingBottom="10" paddingTop="10">
		
			<mx:HBox height="30" includeIn="loadingPortlet" width="100%">
				<s:Label text="{loading}" verticalCenter="0" width="100%"/>					 
			</mx:HBox>
			<mx:VBox height="30" includeIn="NoInfoAvailable" width="100%">
				<mx:Label text="{dataNotFound}" verticalCenter="0" width="100%"/>
			</mx:VBox>
			<mx:HBox includeIn="errorLoadingPortlet" width="100%">
				<mx:Text width="100%" id="errorId" text="{errorFoundLabel}" styleName="errorMessage" />                            
			</mx:HBox>

<!--		~~~~ Verify if this is required ~~~~ -->
			<mx:HBox  includeIn="showInfraPortlet" width="100%" height="100%">
				<mx:Text name="mismatchData" id="lbdata"/>				
				<mx:Image id="loader1" click="moreClicked(event)" buttonMode="true"/>				
			</mx:HBox>
			<mx:HBox includeIn="showInfraPortlet" width="100%" height="100%">
			    <mx:Canvas>
			        <mx:VBox>
						<!--<mx:LinkButton id="networkMismatch" label="{Helper.getString('NetworkMismatch')}" 
									   click="networkMismatchClicked(event)" 
									   styleName="moreLink" visible="{isBL}"/>						
						<s:Spacer width="15" />	-->
				        <mx:AdvancedDataGrid id="networkSummary" columns="{networkSummaryPortletData.columns}"
				                     dataProvider="{networkSummaryPortletData.list}"
									 height="100%"
									 width="100%"
									 >
				            
				        </mx:AdvancedDataGrid>
				        <!--<mx:HBox width="100%" styleName="portletHBox">
							<mx:LinkButton id="moreId" label="{Helper.getString('more')}" 
										   click="moreClicked(event)" 
										   styleName="moreLink"/>
							<s:Spacer width="15" />
							<mx:LinkButton id="networkDiagram" label="{Helper.getString('networkDiagram')}" 
										   click="networkDiagramClicked(event)" 
										   styleName="moreLink" visible="{isBL}"/>													

				        </mx:HBox>-->
			        </mx:VBox>
			    </mx:Canvas>
			</mx:HBox>	
	</s:VGroup>
</s:VGroup>
