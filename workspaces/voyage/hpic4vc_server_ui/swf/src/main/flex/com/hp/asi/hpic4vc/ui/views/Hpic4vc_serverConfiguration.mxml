<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:components="assets.components.*"
		 creationComplete="init()">
	
	<fx:Metadata>
		
		[DefaultMediator("com.hp.asi.hpic4vc.ui.views.Hpic4vc_serverConfigurationMediator")]
		
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import assets.components.AddOrDeleteCredentialsEvent;
			import assets.components.Hpic4vc_EditConfig;
			
			import com.hp.asi.hpic4vc.ui.Hpic4vc_server_providerProxy;
			import com.hp.asi.hpic4vc.ui.model.DataGridWrapper;
			import com.hp.asi.hpic4vc.ui.model.TableModel;
			import com.hp.asi.hpic4vc.ui.utils.Helper;
			import com.vmware.flexutil.events.MethodReturnEvent;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			[Bindable]
			public var dataProvider:ArrayCollection;
			[Bindable]
			public var columns:Array;
			[Bindable]
			public var noRecordsFoundLabel:String;
			[Bindable]
			public var errorFoundLabel:String;
			
			[Bindable]
			public var _proxy:Hpic4vc_server_providerProxy;
			[Bindable]
			public var serviceGuid:String;
			
			public var currentData:ArrayCollection;
			[Bindable]
			public var isAuthorized:Boolean;
			[Bindable]
			private var isAuthorizedWatcher:ChangeWatcher;
			
			private function init():void {
				currentState = "Loading";
				isAuthorizedWatcher = ChangeWatcher.watch(this, ["isAuthorized"], dataAvailable);
				FlexGlobals.topLevelApplication.addEventListener(AddOrDeleteCredentialsEvent.UPDATE_CREDENTIALS,onConfigurationUpdated);
			}
			
			private function dataAvailable(event:Event):void {
				if (isAuthorized) 
				{
					currentState = "Authorized";
				}
				else
				{
					currentState = "NotAuthorized";
				}
				
			}
			
			private function onConfigurationUpdated(e:AddOrDeleteCredentialsEvent=null):void{
				_proxy.getServerConfiguration(serviceGuid, onGettingConfigurationPage);
			}
			
			private function onGettingConfigurationPage(event:MethodReturnEvent):void{
				var tableModel:TableModel = event.result as TableModel;
				var wrapper:DataGridWrapper = Helper.createDataGrid(tableModel);
				
				if (wrapper != null) {
					config.columns = wrapper.columns;
					config.dataProvider = wrapper.list;
				}
			}
			
			private function editCredentials():void {
				var editPopup:Hpic4vc_EditConfig;
				if (currentData){
					editPopup = PopUpManager.createPopUp(this, Hpic4vc_EditConfig, true) as Hpic4vc_EditConfig;
					editPopup.currentData = currentData;
					editPopup._proxy = _proxy;
					editPopup.serviceGuid = serviceGuid;
					editPopup.parentGrid = config;
				}
				else
					Alert.show(Helper.getString('ALERT_SERVER_CONFIGURATION_WARNING'));
			}
			
			private function clickHandler(e:ListEvent):void{
				currentData = e.itemRenderer.data as ArrayCollection;
			}
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout paddingLeft="15"
						  paddingRight="15"
						  paddingTop="15"
						  paddingBottom="15"/>
	</s:layout>
	
	<s:states>
		<s:State name="Loading"/>
		<s:State name="Authorized"/>
		<s:State name="NotAuthorized"/>
	</s:states>	
	
	<mx:VBox width="100%" height="100%" minHeight="0" minWidth="0">
		<mx:VBox width="100%">	
			
			<mx:Text fontSize="15" fontStyle="italic" width="99%"
					 text="{Helper.getString('Hpic4vc_serverConfiguration.text')}"/>		
			<s:Label text=""/>
			
			<mx:Text fontSize="15" width="99%"
					 text="{Helper.getString('Hpic4vc_serverConfiguration.note')}"/> 
			
			<s:Label text=""/>
			
			<mx:Text styleName="gettingStartedPagesHeaderText"
					 text="{Helper.getString('Hpic4vc_serverConfiguration.title')}"/>
			<mx:HRule width="100%"/>
			
		</mx:VBox>
		
		<s:VGroup x="0" y="45" height="100%" width="100%" includeIn="Loading">
			<s:Label text="{Helper.getString('loading')}" verticalCenter="0" />
		</s:VGroup>
		
		<s:VGroup x="0" y="45" height="100%" width="100%" includeIn="Authorized">
			<mx:HBox horizontalGap="9">
				<mx:Image source="@Embed(source='/assets/images/pencil_medium.png')" click="editCredentials()"/>
				<mx:Image source="@Embed(source='/assets/images/refresh.png')" click="onConfigurationUpdated()" buttonMode="true"/>
			</mx:HBox>
			<mx:Text text="{errorFoundLabel}" styleName="errorMessage" />
			<mx:AdvancedDataGrid id="config" x="0" y="42"
								 itemClick="clickHandler(event)"
								 groupedColumns="{columns}"
								 dataProvider="{dataProvider}"
								 height="100%" width="100%"/>
		</s:VGroup>
		
		<s:VGroup height="100%" width="100%" includeIn="NotAuthorized">
			<mx:Text text="{Helper.getString('noPermission')}" width="99%"/>
		</s:VGroup>
	</mx:VBox>
</s:Group>