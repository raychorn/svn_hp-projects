<!DOCTYPE html>
<html lang="en">
<head>
  <title>jQuery.tmpl() &#8211; jQuery API</title>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<link rel="alternate" type="application/rss+xml" title="jQuery API &raquo; jQuery.tmpl() Comments Feed" href="http://api.jquery.com/jquery.tmpl/feed/" />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://api.jquery.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://api.jquery.com/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='jQuery API' href='http://api.jquery.com/' />
<link rel='start' title='.addClass()' href='http://api.jquery.com/addClass/' />
<link rel='prev' title='{{else}} Template Tag' href='http://api.jquery.com/template-tag-else/' />
<link rel='next' title='event.namespace' href='http://api.jquery.com/event.namespace/' />
<meta name="generator" content="WordPress 3.2.1" />
<link rel='canonical' href='http://api.jquery.com/jquery.tmpl/' />
<link rel='shortlink' href='http://api.jquery.com/?p=2355' />
  <link rel="pingback" href="http://api.jquery.com/xmlrpc.php" />
  <link rel="stylesheet" href="http://static.jquery.com/files/rocker/css/reset.css" type="text/css" />
  <link rel="stylesheet" type="text/css" href="http://static.jquery.com/api/style.css" />
  <link rel="stylesheet" href="http://static.jquery.com/api/prettify.css">
  <script src="http://code.jquery.com/jquery.min.js" type="text/javascript"></script>
  <script type="text/javascript" src="http://static.jquery.com/files/rocker/scripts/custom.js"></script>
  <script type="text/javascript" src="http://static.jquery.com/api/jquery.livesearch.js"></script>
  <script type="text/javascript" src="http://static.jquery.com/api/navi.js"></script>
  <link rel="shortcut icon" href="http://static.jquery.com/favicon.ico" type="image/x-icon"/>
</head>

<body id="jq-interior" class="api-jquery-com single">


  <div id="jq-siteContain">
      <div id="jq-header">
        <a id="jq-siteLogo" href="http://jquery.com/" title="jQuery Home"><img src="http://static.jquery.com/files/rocker/images/logo_jquery_215x53.gif" width="215" height="53" alt="jQuery: Write Less, Do More." /></a>
        <div id="jq-primaryNavigation">
          <ul>
<li class="jq-jquery jq-current"><a href="http://jquery.com/" title="jQuery Home">jQuery</a></li>
<li class="jq-plugins"><a href="http://plugins.jquery.com/" title="jQuery Plugins">Plugins</a></li>
<li class="jq-ui"><a href="http://jqueryui.com/" title="jQuery UI">UI</a></li>
<li class="jq-meetup"><a href="http://meetups.jquery.com/" title="jQuery Meetups">Meetups</a></li>
<li class="jq-forum"><a href="http://forum.jquery.com/" title="jQuery Forum">Forum</a></li>
<li class="jq-blog"><a href="http://blog.jquery.com/" title="jQuery Blog">Blog</a></li>
<li class="jq-about"><a href="http://jquery.org/about" title="About jQuery">About</a></li>
<li class="jq-donate"><a href="http://jquery.org/donate" title="Donate to jQuery">Donate</a></li>
          </ul>
        </div><!-- /#primaryNavigation -->

        <div id="jq-secondaryNavigation">
          <ul>
            <li class="jq-download jq-first"><a href="http://docs.jquery.com/Downloading_jQuery">Download</a></li>
            <li class="jq-documentation jq-current"><a href="http://docs.jquery.com/">Documentation</a></li>
            <li class="jq-tutorials"><a href="http://docs.jquery.com/Tutorials">Tutorials</a></li>
            <li class="jq-bugTracker"><a href="http://dev.jquery.com/">Bug Tracker</a></li>
            <li class="jq-discussion jq-last"><a href="http://docs.jquery.com/Discussion">Discussion</a></li>
          </ul>
        </div><!-- /#secondaryNavigation -->



        <form id="jq-primarySearchForm" action="http://api.jquery.com" method="get" autocomplete="off">
          <div>
            <input type="hidden" value="1" name="ns0"/>
            <label for="jq-primarySearch">Search <span class="jq-jquery">jQuery</span></label>
            <input type="text" value="" accesskey="f" title="Search jQuery" name="s" id="jq-primarySearch" class=""/>
            <button type="submit" name="go" id="jq-searchGoButton"><span>Go</span></button>
          </div>
        </form>

<!--
        <h1 id="blog-title"><span><a href="http://api.jquery.com/" title="jQuery API" rel="home">jQuery API</a></span></h1>
        <div id="blog-description">jQuery API Reference</div>
-->
        <h1>jQuery API</h1>


      </div><!-- /#header -->

      <div id="jq-content" class="jq-clearfix">




  <div id="access">
    <div class="skip-link"><a href="#content" title="Skip to content">Skip to content</a></div>
    <div id="menu"><ul><li class="page_item page-item-1295"><a href="http://api.jquery.com/api/" title="api">api</a></li><li class="page_item page-item-1772"><a href="http://api.jquery.com/jsonp/" title="jsonp">jsonp</a></li><li class="page_item page-item-3413"><a href="http://api.jquery.com/Types/" title="Types">Types</a></li><li class="page_item page-item-3608"><a href="http://api.jquery.com/extending-ajax/" title="Extending Ajax: Prefilters, Converters, and Transports">Extending Ajax: Prefilters, Converters, and Transports</a></li></ul></div>
  </div>
<!-- #access -->

  <div id="jq-primaryContent">
    <div id="content">

      <div id="post-2355" class="hentry p1 post publish category-templates untagged y2010 m10 d03 h02 plugin-entry">
        <div class="entry-content b-wrap">
        <div class="entry-title roundTop">
                    <h2 class="plugin-header">jQuery Plugin</h2>
          
          <h1 class="jq-clearfix">jQuery.tmpl()</h1>
          <div class="entry-meta jq-clearfix">
            <div class="banner">This feature and its documentation are in beta and subject to change before final release.</div>            Categories:
            <span class="category"><a href="http://api.jquery.com/category/plugins/" title="View all posts in Plugins">Plugins</a> &gt; <a href="http://api.jquery.com/category/plugins/templates/" title="View all posts in Templates">Templates</a></span>
  

          </div>

</div>
<div id="jQuery-tmpl1" class="entry plugin method">
<h2 class="jq-clearfix roundTop section-title">
<span class="name">jQuery.tmpl( template [, data]  [, options]  )</span> <span class="returns">Returns: <a class="return" href="http://api.jquery.com/Types/#jQuery">jQuery</a></span>
</h2>
<div class="jq-box roundBottom entry-details">
<p class="desc"><strong>Description: </strong>Render the specified HTML content as a template, using the specified data.</p>
<ul class="signatures"><li class="signature" id="jQuery-tmpl-template-data-options">
<h4 class="name">
<span class="versionAdded">version added: <a href="/category/version/1.4.3/">1.4.3</a></span>jQuery.tmpl( template [, data] [, options] )</h4>
<p class="arguement"><strong>template</strong>The HTML markup or text to use as a template.</p>
<p class="arguement"><strong>data</strong>The data to render. This can be any JavaScript type, including Array or Object.</p>
<p class="arguement"><strong>options</strong>An optional map of user-defined key-value pairs. Extends the <code>tmplItem</code> data structure, available to the template during rendering.</p>
</li></ul>
<div class="download"><p>This documentation topic concerns the <em> jQuery Templates</em> plugin (jquery-tmpl), which can be downloaded from: <a href="http://github.com/jquery/jquery-tmpl">http://github.com/jquery/jquery-tmpl</a>.</p></div>
<div class="longdesc">
<p>The <code>jQuery.tmpl()</code> method is designed for chaining with <code>.appendTo</code>, <code>.prependTo</code>, <code>.insertAfter</code> or <code>.insertBefore</code> as in the following example.</p>
<p>Example:</p>
<pre>$.tmpl( "&lt;li&gt;${Name}&lt;/li&gt;", { "Name" : "John Doe" }).appendTo( "#target" );</pre>
<p>The <code>template</code> parameter can be any of the following: </p>
<ul>
<li>A string containing markup.</li>
<li>An HTML element (or jQuery object that wraps an element) whose content is to be used as the template.</li>
<li>A string corresponding to the name of a named template (see <a href="http://api.jquery.com/jquery.template">jQuery.template()</a> and <a href="http://api.jquery.com/template">.template()</a>).</li>
<li>A compiled-template function (see <a href="http://api.jquery.com/jquery.template">jQuery.template()</a> and <a href="http://api.jquery.com/template">.template()</a>).</li>
</ul>
<p>
If <code>data</code> is an array, the template is rendered once for each data item in the array. If <code>data</code> is an object, or if the <code>data</code> parameter is missing or null, a single template item is rendered.
</p>
<p>
The return value is a jQuery collection of elements made up of the rendered template items (one for each data item in the array). If the template contains only one top-level element, then there will be one element for each data item in the array.
</p>
<p>
To insert the rendered template items into the HTML DOM, the returned jQuery collection should not be inserted directly into the DOM, but should be chained with <code>.appendTo</code>, <code>.prependTo</code>, <code>.insertAfter</code> or <code>.insertBefore</code>, as in following example:
</p>
<pre>$.tmpl( myTemplate, myData ).appendTo( "#target" );</pre>
<p>See also <a href="http://api.jquery.com/tmpl">.tmpl()</a>.</p>
<h4 id="desc-example">Example</h4>
<p>
The following example shows how to use <code>jQuery.tmpl()</code> to render local data, using a template provided as a string:
</p>
<pre>&lt;ul id="movieList"&gt;&lt;/ul&gt;

&lt;script type="text/javascript"&gt;
  var movies = [
      { Name: "The Red Violin", ReleaseYear: "1998" },
      { Name: "Eyes Wide Shut", ReleaseYear: "1999" },
      { Name: "The Inheritance", ReleaseYear: "1976" }
  ];

  var markup = "&lt;li&gt;&lt;b&gt;${Name}&lt;/b&gt; (${ReleaseYear})&lt;/li&gt;";

  // Compile the markup as a named template
  $.template( "movieTemplate", markup );

  // Render the template with the movies data and insert
  // the rendered HTML under the "movieList" element
  $.tmpl( "movieTemplate", movies )
      .appendTo( "#movieList" );
&lt;/script&gt;
</pre>
<h4 id="using-remote-data">Using Remote Data</h4>
<p>
Typically the data is not local and is instead obtained using an Ajax request to a remote service or page, as in the following example: 
</p>
<pre>var markup = "&lt;li&gt;&lt;b&gt;${Name}&lt;/b&gt; (${ReleaseYear})&lt;/li&gt;";

// Compile the markup as a named template
$.template( "movieTemplate", markup );

$.ajax({
  dataType: "jsonp",
  url: moviesServiceUrl,
  jsonp: "$callback",
  success: showMovies
});

// Within the callback, use .tmpl() to render the data.
function showMovies( data ) {
  // Render the template with the "movies" data and insert
  // the rendered HTML under the 'movieList' element
  $.tmpl( "movieTemplate", data )
    .appendTo( "#movieList" );
}
</pre>
<h4 id="markup-for-template">The Markup for the Template </h4>
<p>
You can get the markup for the template from inline markup in the page, or from a string (possibly computed, or obtained remotely). For an example of how to use inline markup, see <a href="http://api.jquery.com/tmpl">.tmpl()</a>. 
</p>
<h4 id="caching-template">Caching the Template</h4>
<p>
When a template is rendered, the markup is first converted into a compiled-template function. Every time <code>$.tmpl( markup , myData ).appendTo( "#target" )</code> is called, the template is recompiled. If the same template is to be used more than once for rendering data, you should ensure that the compiled template is cached. To cache the template when using markup that is obtained from a string (rather than from inline markup in the page), use 
<code>$.template( name, markup )</code> to create a named template for reuse. See <a href="http://api.jquery.com/jquery.template">jQuery.template()</a>. 
</p>
<h4 id="tags-expressions-variables">Template Tags, Expressions, and Template Variables</h4>
<p>Template tags such as the <code>${}</code> tag can used within jQuery templates in addition to text and HTML markup to enable a number of scenarios such as composition of templates, iteration over hierarchical data, parameterization of template rendering, etc. Template tags can render content based on the values of data item fields or template variables such as <code>$item</code> (corresponding to the template item), as well as expressions and function calls. See the documentation topics for each template tag: <a href="http://api.jquery.com/template-tag-equal">${}</a>, <a href="http://api.jquery.com/template-tag-each">{{each}}</a>, <a href="http://api.jquery.com/template-tag-if">{{if}}</a>, <a href="http://api.jquery.com/template-tag-else">{{else}}</a>, <a href="http://api.jquery.com/template-tag-html">{{html}}</a>, <a href="http://api.jquery.com/template-tag-tmpl">{{tmpl}}</a> and <a href="http://api.jquery.com/template-tag-wrap">{{wrap}}</a>. </p>
<h4 id="options-items">The <code>options</code> Parameter, and Template Items</h4>
<p>Each template item (the result of rendering a data item with the template) is associated with a <code>tmplItem</code> data structure, which can be accessed using <a href="http://api.jquery.com/jquery.tmplitem">jQuery.tmplItem()</a> and <a href="http://api.jquery.com/tmplitem">.tmplItem()</a>, or the <code>$item</code> template variable. Any fields or anonomyous methods passed in with the <code>options</code> parameter of <code>jQuery.tmpl()</code> will extend the <code>tmplItem</code> data structure, and so be available to the template as in the following example:
</p>
<pre>
var markup = "&lt;li&gt;Some content: ${$item.myMethod()}.&lt;br/&gt;" 
           + " More content: ${$item.myValue}.&lt;/li&gt;";

// Compile the markup as a named template
$.template( "movieTemplate", markup );

// Render the template with the movies data
$.tmpl( "movieTemplate", movies,
  { 
      myValue: "somevalue", 
      myMethod: function() { 
          return "something";
      } 
  } 
).appendTo( "#movieList" );
</pre>
</div>
<h3 id="notes-0">Additional Notes:</h3><div class="longdesc"><ul><li>Netflix recently changed the API that we use in the remote service example below. We are aware that this change breaks the demo and will work on an update as soon as we can.</li></ul></div><h3>Examples:</h3>
<div class="entry-examples" id="entry-examples">
<div id="example-0">
<h4>Example: <span class="desc">Render local data using jQuery.tmpl().</span>
</h4>
<pre class="prettyprint"><code class="example demo-code">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;script src="http://code.jquery.com/jquery-latest.min.js"&gt;&lt;/script&gt;
  &lt;script src="http://ajax.microsoft.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  
&lt;ul id="movieList"&gt;&lt;/ul&gt;

&lt;script&gt;
  var movies = [
  { Name: "The Red Violin", ReleaseYear: "1998" },
  { Name: "Eyes Wide Shut", ReleaseYear: "1999" },
  { Name: "The Inheritance", ReleaseYear: "1976" }
  ];

var markup = "&lt;li&gt;&lt;b&gt;${Name}&lt;/b&gt; (${ReleaseYear})&lt;/li&gt;";

/* Compile the markup as a named template */
$.template( "movieTemplate", markup );

/* Render the template with the movies data and insert
   the rendered HTML under the "movieList" element */
$.tmpl( "movieTemplate", movies )
  .appendTo( "#movieList" );
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>
<h4>Demo:</h4>
<div class="demo code-demo"></div>
</div>
<div id="example-1">
<h4>Example: <span class="desc">Render data from a remote service, using jQuery.tmpl().</span>
</h4>
<pre class="prettyprint"><code class="example demo-code">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;script src="http://code.jquery.com/jquery-latest.min.js"&gt;&lt;/script&gt;
  &lt;script src="http://ajax.microsoft.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  
&lt;button id="cartoonsBtn"&gt;Cartoons&lt;/button&gt;
&lt;button id="dramaBtn"&gt;Drama&lt;/button&gt;

&lt;ul id="movieList"&gt;&lt;/ul&gt;

&lt;script&gt;
var markup = "&lt;li&gt;&lt;b&gt;${Name}&lt;/b&gt; (${ReleaseYear})&lt;/li&gt;";

/* Compile the markup as a named template */
$.template( "movieTemplate", markup );

function getMovies( genre, skip, top ) {
  $.ajax({
    dataType: "jsonp",
    url: "http://odata.netflix.com/Catalog/Genres('" + genre
    + "')/Titles?$format=json&amp;$skip="
    + skip + "&amp;$top=" + top,
    jsonp: "$callback",
    success: function( data ) {
      /* Get the movies array from the data */
      var movies = data.d;

      /* Remove current set of movie template items */
      $( "#movieList" ).empty();

      /* Render the template items for each movie
      and insert the template items into the "movieList" */
      $.tmpl( "movieTemplate", movies )
      .appendTo( "#movieList" );
    }
  });
}

$( "#cartoonsBtn" ).click( function() {
  getMovies( "Cartoons", 0, 6 );
});

$( "#dramaBtn" ).click( function() {
  getMovies( "Drama", 0, 6 );
});

&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>
<h4>Demo:</h4>
<div class="demo code-demo"></div>
</div>
</div>
</div>
</div>

        </div>
      </div><!-- .post -->
    <h1 id="comments" class="roundTop section-title">Support and Contributions</h1>
<div class="jq-box roundBottom">
  <p>Need help with <strong>jQuery.tmpl()</strong> or have a question about it? Visit the <a href="http://forum.jquery.com/">jQuery Forum</a> or the <strong>#jquery</strong> channel on <a href="irc://irc.freenode.net/">irc.freenode.net</a>.</p>
  <p>Think you've discovered a jQuery bug related to <strong>jQuery.tmpl()</strong>? <a href="http://docs.jquery.com/How_to_Report_Bugs">Report it</a> to the jQuery core team.</p>

  <p>Found a problem with this documentation? <a id="api-error" href="#rpt-issue">Report it</a> to the jQuery API team.</p>    <form id="rpt-issue" action="#comments" method="post">
      * All fields are required      <fieldset>
        <div style="position:absolute;left:-1000em;">
          <input type="text" name="address" value="">
          <input type="hidden" name="date" value="08 Nov 2011">
        </div>
        <div>
          <label for="api_name">Name:</label>
          <input name="fullname" id="api_name" value="">
        </div>
        <div>
          <label for="api_email">Email Address:</label>
          <input name="email" id="api_email" value="">
        </div>
        <div>
          <label for="api_title">Subject:</label>
          <input id="api_title" name="api_title" value="Documentation problem with jQuery.tmpl()" />
        </div>
        <div>
          <label for="api_comment">Comment:</label>
          <textarea id="api_comment" name="api_comment"></textarea>
        </div>
        <button type="submit" disabled="disabled">Report</button>
      </fieldset>
    </form>

          <script>jQuery(function($) { $('#rpt-issue').hide();$('#api-error').bind('click',function(e) {e.preventDefault();$('#rpt-issue').slideDown().find('button').prop('disabled', false);});});</script>  <!-- <ul class="comment-instructions">
    <li><h3 style="margin-top: 0; font-size: 1.4em">Support requests, bug reports, and off-topic comments will be <em>deleted</em> without warning.</h3></li>
    <li>Please do post corrections or additional examples for jQuery.tmpl() below. We aim to quickly move corrections into the documentation.</li>
    <li>If you need help, post at the <a href="http://forum.jquery.com/">forums</a> or in the #jquery IRC channel.</li>
    <li>Report bugs on the <a href="http://dev.jquery.com/newticket/">bug tracker</a> or the <a href="http://forum.jquery.com/developing-jquery-core">jQuery Forum</a>.</li>
    <li>Discussions about the API specifically should be addressed in the <a href="http://forum.jquery.com/developing-jquery-core">Developing jQuery Core forum</a>.</li>
  </ul> -->
<div style="margin-top:2em;">

<div id="disqus_thread">
                    <div id="dsq-content">
            <ul id="dsq-comments">
                    <li id="dsq-comment-6108">
                    <div id="dsq-comment-header-6108" class="dsq-comment-header">
                        <cite id="dsq-cite-6108">
                                <span id="dsq-author-user-6108">Trey</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6108" class="dsq-comment-body">
                        <div id="dsq-comment-message-6108" class="dsq-comment-message"><p>The example in the section entitled &#8220;The options Parameter&#8221; is not valid javascript. Unless my brain isn&#39;t working properly setting a function in an object still requires the colon syntax.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6116">
                    <div id="dsq-comment-header-6116" class="dsq-comment-header">
                        <cite id="dsq-cite-6116">
    http://developerspage.wordpress.com                            <span id="dsq-author-user-6116">Ankit Bhatia</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6116" class="dsq-comment-body">
                        <div id="dsq-comment-message-6116" class="dsq-comment-message"><p>The data in above examples is in array format. Is it possible to use XML or JSON instead?</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6125">
                    <div id="dsq-comment-header-6125" class="dsq-comment-header">
                        <cite id="dsq-cite-6125">
                                <span id="dsq-author-user-6125">Dom Ioanna</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6125" class="dsq-comment-body">
                        <div id="dsq-comment-message-6125" class="dsq-comment-message"><p>Would it be possible to run this with an XML dataset?</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6137">
                    <div id="dsq-comment-header-6137" class="dsq-comment-header">
                        <cite id="dsq-cite-6137">
    http://borismoore.com                            <span id="dsq-author-user-6137">BorisMoore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6137" class="dsq-comment-body">
                        <div id="dsq-comment-message-6137" class="dsq-comment-message"><p>The data can be any JavaScript type &#8211; in particular objects or arrays. (JavaScript object graph, if you will.) JSON can be the format over the wire of course and it will eval to an object graph. For XML, no, not yet&#8230;</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6136">
                    <div id="dsq-comment-header-6136" class="dsq-comment-header">
                        <cite id="dsq-cite-6136">
    http://borismoore.com                            <span id="dsq-author-user-6136">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6136" class="dsq-comment-body">
                        <div id="dsq-comment-message-6136" class="dsq-comment-message"><p>No, you would need to convert your XML Document to a JavaScript &#39;object graph&#39; of some kind &#8211; nested objects and arrays. Maybe in a future version. But currently the template tags undestand JavaScript expressions, not the XML Document API.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6141">
                    <div id="dsq-comment-header-6141" class="dsq-comment-header">
                        <cite id="dsq-cite-6141">
    http://twitter.com/richard_lopes                            <span id="dsq-author-user-6141">richard_lopes</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6141" class="dsq-comment-body">
                        <div id="dsq-comment-message-6141" class="dsq-comment-message"><p>Instead of creating again a double-bracket template engine, why not using the less invasive approach from Pure ? I am using their solution and it just feel more natural than anything else. Relying on HTML instead of reinventing the wheel. Faster learning curve. Curious people can google Pure from Beebole.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6140">
                    <div id="dsq-comment-header-6140" class="dsq-comment-header">
                        <cite id="dsq-cite-6140">
                                <span id="dsq-author-user-6140">Tyler</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6140" class="dsq-comment-body">
                        <div id="dsq-comment-message-6140" class="dsq-comment-message"><p>For the template, can the JavaScript objects properties have spaces in them? Such as:<br />var movies = { &#8220;Movie Title&#8221; : &#8220;Batman&#8221; };<br />And then be used in a template like:<br />&lt;li&gt;${Movie Title}&lt;/li&gt;<br />When I do this I get nothing rendered from the template. Is this supported currently?</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6167">
                    <div id="dsq-comment-header-6167" class="dsq-comment-header">
                        <cite id="dsq-cite-6167">
    http://borismoore.com                            <span id="dsq-author-user-6167">Borismoore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6167" class="dsq-comment-body">
                        <div id="dsq-comment-message-6167" class="dsq-comment-message"><p>You can do: ${$data["Movie Title"]}<br />
<br />Or you can do ${getName()} and define a function called getName in which you return <br />this.data["Movie Title"]</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6193">
                    <div id="dsq-comment-header-6193" class="dsq-comment-header">
                        <cite id="dsq-cite-6193">
    http://borismoore.com                            <span id="dsq-author-user-6193">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6193" class="dsq-comment-body">
                        <div id="dsq-comment-message-6193" class="dsq-comment-message"><p>You can do: ${$data["Movie Title"]}<br />Or you can do ${getName()} <br />and define a function called getName() in which you return <br />this.data["Movie Title"]</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6231">
                    <div id="dsq-comment-header-6231" class="dsq-comment-header">
                        <cite id="dsq-cite-6231">
    http://aery.posterous.com                            <span id="dsq-author-user-6231">Hairiemx</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6231" class="dsq-comment-body">
                        <div id="dsq-comment-message-6231" class="dsq-comment-message"><p>Currently I use the technique from john resig micro template. I prefer the template to be cached by function. For example, use $.tmpl(&#8220;template code&#8221;) to convert the template into a function that can be reused many times.  I</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6232">
                    <div id="dsq-comment-header-6232" class="dsq-comment-header">
                        <cite id="dsq-cite-6232">
    http://borismoore.com                            <span id="dsq-author-user-6232">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6232" class="dsq-comment-body">
                        <div id="dsq-comment-message-6232" class="dsq-comment-message"><p>That&#39;s still available in the jQuery Templates plugin. The return value of $.template, or .template is the compiled-template function.<br />
<br />You can do:<br />
<br />    var cachedTemplate = $(&#8220;#mytemplate&#8221;).template();<br />
<br />or<br />
<br />    var cachedTemplate = $.template(mytemplateMarkupString);</p>
<p>And you can use it as in $.tmpl( cachedTemplate, data ).appendTo(&#8230;);</p>
<p>You can also call it as a function, but you have to pass the jQuery object as first parameter, and then the equivalent of the template item as the second. See this as an interesting use scenario. <a href="http://github.com/nje/jquery-tmpl/issues#issue/16" rel="nofollow">http://github.com/nje/jquery-tmpl/issues#issue/16</a>.</p>
<p>I hope we will make this scenario of using a template to render out data as a string more discoverable and more &#39;friendly&#39; as an API in an upcoming version.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6259">
                    <div id="dsq-comment-header-6259" class="dsq-comment-header">
                        <cite id="dsq-cite-6259">
                                <span id="dsq-author-user-6259">Saetia</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6259" class="dsq-comment-body">
                        <div id="dsq-comment-message-6259" class="dsq-comment-message"><p>Anyone else noticing how slow this is compared to a simple while loop and .join?</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6274">
                    <div id="dsq-comment-header-6274" class="dsq-comment-header">
                        <cite id="dsq-cite-6274">
                                <span id="dsq-author-user-6274">Tyler</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6274" class="dsq-comment-body">
                        <div id="dsq-comment-message-6274" class="dsq-comment-message"><p>Awesome! I was worried that might have been overlooked, but glad it wasn&#39;t.  When I get a chance I will work on converting over our custom template implementation we made to use the JQuery implementation instead&#8230;keep up the great work!</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6280">
                    <div id="dsq-comment-header-6280" class="dsq-comment-header">
                        <cite id="dsq-cite-6280">
                                <span id="dsq-author-user-6280">Allstealth</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6280" class="dsq-comment-body">
                        <div id="dsq-comment-message-6280" class="dsq-comment-message"><p>What about passing one of the data properties as an html?  var foo ={ picture: &#39;&lt;img src&#39;&#39;=&#8221;"&gt;&#39; }</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6292">
                    <div id="dsq-comment-header-6292" class="dsq-comment-header">
                        <cite id="dsq-cite-6292">
                                <span id="dsq-author-user-6292">zac</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6292" class="dsq-comment-body">
                        <div id="dsq-comment-message-6292" class="dsq-comment-message"><p>..btw I found that I needed to do the same with javascript reserved words, so:</p>
<p>{{= item[&#39;class&#39;] }}</p>
<p>NB.  {{= item.class }} works fine in all browsers , FF, Chrome, Safari, Opera, but fails in IE.  e.g. IE8 error:</p>
<p>Message: Expected identifier<br />Line: 314<br />Char: 3<br />Code: 0<br />URI: <a href="http://localhost:8080/js/plugins/jquery.tmpl.js" rel="nofollow">http://localhost:8080/js/plugins/jquery.tmpl.js</a></p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6294">
                    <div id="dsq-comment-header-6294" class="dsq-comment-header">
                        <cite id="dsq-cite-6294">
                                <span id="dsq-author-user-6294">Santhosh Kumar</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6294" class="dsq-comment-body">
                        <div id="dsq-comment-message-6294" class="dsq-comment-message"><p>I need to know the list of variables defined in a template. Is there any way to get that ? </p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6301">
                    <div id="dsq-comment-header-6301" class="dsq-comment-header">
                        <cite id="dsq-cite-6301">
    http://www.borismoore.com                            <span id="dsq-author-user-6301">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6301" class="dsq-comment-body">
                        <div id="dsq-comment-message-6301" class="dsq-comment-message"><p>Yes, you can do that. If you want the markup to get rendered into the DOM, use {{html picture}} rather than ${picture}. Take a look at the documentation for the {{html}} template tag for details.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6300">
                    <div id="dsq-comment-header-6300" class="dsq-comment-header">
                        <cite id="dsq-cite-6300">
    http://www.borismoore.com                            <span id="dsq-author-user-6300">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6300" class="dsq-comment-body">
                        <div id="dsq-comment-message-6300" class="dsq-comment-message"><p>Not sure what you mean by variables defined in a template. The tags generally deal with JavaScript expressions, so ${foo} will expect foo to be defined as a JavaScript variable. The template evaluation is in the context of a with($data) statement, where $data is the current data item, so foo could be a global varialble or could be a field on the $data object. You can also use $item for the current template items. Or some more complex JavaScript expression such as ${someObject.someMethod(a,b)} etc. More details are in the different doc  topics&#8230;</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6302">
                    <div id="dsq-comment-header-6302" class="dsq-comment-header">
                        <cite id="dsq-cite-6302">
    http://www.borismoore.com                            <span id="dsq-author-user-6302">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6302" class="dsq-comment-body">
                        <div id="dsq-comment-message-6302" class="dsq-comment-message"><p>If you have ${foo} or {{= foo}}, then foo is evaluated as a JavaScript expression. Evaluation is in the context of with($data) (JavaScript with statement). So everything follows from that. In JavaScript if you have an object dataItem with keys &#8220;class&#8221; or &#8220;a-b&#8221; or &#8220;a b&#8221;, then dataItem.class will not work in IE, and dataItem.a-b or dataItem.a b will not correspond to what you want. For those keys you have to do dataItem[&#39;key&#39;]. This is JavaScript behavior, and is not specific to the templates. (Given we opted for a design which supports JavaScript expressions). Make sense?</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6358">
                    <div id="dsq-comment-header-6358" class="dsq-comment-header">
                        <cite id="dsq-cite-6358">
                                <span id="dsq-author-user-6358">Allstealth</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6358" class="dsq-comment-body">
                        <div id="dsq-comment-message-6358" class="dsq-comment-message"><p>worked like a charm, thanks!</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6384">
                    <div id="dsq-comment-header-6384" class="dsq-comment-header">
                        <cite id="dsq-cite-6384">
                                <span id="dsq-author-user-6384">zac</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6384" class="dsq-comment-body">
                        <div id="dsq-comment-message-6384" class="dsq-comment-message"><p>naturally! ace thanks. this plugin is so nicely written &#8211; beautiful sys.  really enjoying working with it !</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6407">
                    <div id="dsq-comment-header-6407" class="dsq-comment-header">
                        <cite id="dsq-cite-6407">
    http://twitter.com/bczengel                            <span id="dsq-author-user-6407">Brian Zengel</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6407" class="dsq-comment-body">
                        <div id="dsq-comment-message-6407" class="dsq-comment-message"><p>I&#39;m having a problem with this plugin being compatible with the TinyMCE WYSIWYG editor.  Any time an instance of tinymce is loaded first the template plugin will only render the first object in the template in the first iteration of the template.  In other words if you are rendering a template with multiple un-nested divs using multiple data points.  Only the first div of the template with the first data point will be rendered.  I am using the most current stable version of the template plugin and tinymce and version 1.3.2 of jQuery.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6409">
                    <div id="dsq-comment-header-6409" class="dsq-comment-header">
                        <cite id="dsq-cite-6409">
    http://twitter.com/bczengel                            <span id="dsq-author-user-6409">Brian Zengel</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6409" class="dsq-comment-body">
                        <div id="dsq-comment-message-6409" class="dsq-comment-message"><p>Switching from &#8220;$(&#39;#tmplTemplate).tmpl(mydata).appendTo(&#39;#divContainer&#39;);&#8221; to &#8220;$(&#39;#divContainer&#39;).append($(&#39;#tmplTemplate).tmpl(mydata));&#8221; fixed the problem.  Clearly nothing to do with the template plugin and entirely to do with TinyMCE.  Sorry about that.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6503">
                    <div id="dsq-comment-header-6503" class="dsq-comment-header">
                        <cite id="dsq-cite-6503">
    http://twitter.com/davetayls                            <span id="dsq-author-user-6503">David Taylor</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6503" class="dsq-comment-body">
                        <div id="dsq-comment-message-6503" class="dsq-comment-message"><p>Hi, I have been loving using this plugin ever since the first versions were out, thanks for all the hard work!</p>
<p>I have one query, is there a way of accessing the current item&#39;s index eg ${$item.index} or $i?</p>
<p>Thanks</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6504">
                    <div id="dsq-comment-header-6504" class="dsq-comment-header">
                        <cite id="dsq-cite-6504">
    http://twitter.com/siravington                            <span id="dsq-author-user-6504">Steven Moseley</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6504" class="dsq-comment-body">
                        <div id="dsq-comment-message-6504" class="dsq-comment-message"><p>One of the properties I am returning back in the array is called LongDescription and it contains actual HTML. Is there a way to encode that so the HTMLis rendered on the page instead of rendering the HTML as text?</p>
<p>For example, instead of rendering the image it is rendering the actual tag &lt;img src=&#8221;&#8230;&#8221;/&#8221;&gt;.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6534">
                    <div id="dsq-comment-header-6534" class="dsq-comment-header">
                        <cite id="dsq-cite-6534">
                                <span id="dsq-author-user-6534">Rich</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6534" class="dsq-comment-body">
                        <div id="dsq-comment-message-6534" class="dsq-comment-message"><p>I have the same issue, looking for an answer.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6535">
                    <div id="dsq-comment-header-6535" class="dsq-comment-header">
                        <cite id="dsq-cite-6535">
                                <span id="dsq-author-user-6535">Vinnie Rossi</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6535" class="dsq-comment-body">
                        <div id="dsq-comment-message-6535" class="dsq-comment-message"><p>I feel like the current data item should contain an &#8220;index&#8221; property so that you don&#39;t have to look the item up in the array to figure out whether your position is even or odd to show an alternating class.</p>
<p>return ($.inArray( item, array ) % 2) ? &#8220;personAlt&#8221; : &#8220;person&#8221;;</p>
<p>Instead this would just be..</p>
<p>return (item.index % 2) ? &#8220;personAlt&#8221; : &#8220;person&#8221;;</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6569">
                    <div id="dsq-comment-header-6569" class="dsq-comment-header">
                        <cite id="dsq-cite-6569">
                                <span id="dsq-author-user-6569">ameya kogje</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6569" class="dsq-comment-body">
                        <div id="dsq-comment-message-6569" class="dsq-comment-message"><p>Hi, I was directed here from github (<a href="http://github.com/jquery/jquery-tmpl/issues/closed#issue/3" rel="nofollow">http://github.com/jquery/jquery-tmpl/issues/closed#issue/3</a>). The IE8 issue described there is about white space in the value of attribute and not the key. <br />Object:<br />var company = { companyName: &#39;ABC ASDF&#39; };<br />Template:<br />&lt;input id=&#8221;companyName&#8221; name=&#8221;companyName&#8221; type=&#8221;text&#8221; value=&#8221;${companyName}&#8221;&gt;<br />Output:<br />&lt;input asdf=&#8221;" id=&#8221;companyName&#8221; name=&#8221;companyName&#8221; value=&#8221;ABC&#8221;&gt;<br />Here, using ${$data[&#39;companyName&#39;]} instead of ${companyName} solved the issue.<br />New Output:<br />&lt;input id=&#8221;companyPhone&#8221; name=&#8221;companyPhone&#8221; value=&#8221;a b c&#8221;&gt; <br />Does that mean I must not use  ${companyName} format at all (for any attribute whose value can have white spaces)?</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6677">
                    <div id="dsq-comment-header-6677" class="dsq-comment-header">
                        <cite id="dsq-cite-6677">
    http://www.borismoore.com                            <span id="dsq-author-user-6677">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6677" class="dsq-comment-body">
                        <div id="dsq-comment-message-6677" class="dsq-comment-message"><p>Use the {{html}} template tag. It is similar to the ${} tag, but does not HTML encode.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6690">
                    <div id="dsq-comment-header-6690" class="dsq-comment-header">
                        <cite id="dsq-cite-6690">
    http://www.borismoore.com                            <span id="dsq-author-user-6690">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6690" class="dsq-comment-body">
                        <div id="dsq-comment-message-6690" class="dsq-comment-message"><p>Use the {{html}} template tag. It is similar to the ${} tag, but does not HTML encode.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6691">
                    <div id="dsq-comment-header-6691" class="dsq-comment-header">
                        <cite id="dsq-cite-6691">
    http://www.borismoore.com                            <span id="dsq-author-user-6691">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6691" class="dsq-comment-body">
                        <div id="dsq-comment-message-6691" class="dsq-comment-message"><p>The data can be any JavaScript type &#8211; in particular objects or arrays. (JavaScript object graph, if you will.) JSON can be the format over the wire of course and it will eval to an object graph. For XML, no, not yet&#8230; You would need to convert it to JSON, or equivalently, to nested objects and arrays.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6894">
                    <div id="dsq-comment-header-6894" class="dsq-comment-header">
                        <cite id="dsq-cite-6894">
                                <span id="dsq-author-user-6894">Who Mobile</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6894" class="dsq-comment-body">
                        <div id="dsq-comment-message-6894" class="dsq-comment-message"><p>Just few thought after use it with lots of learning as beginner.  <br />1) it works well and very clean. <br />2) some part it depends on browser ( {{if abc}} in FF/IE and Chrome is different. In chrome, if abc is not exist, it use $data itself. In FF/IE, if abc is not exist, it is false. I would recommend to use {{if checkcond()}} and check this.data inside checkcond. it is much cleaner. <br />3) if you have to use recursive/nested template, make cleaner conditions of recursive condition. (browser might through stack overflow exception), I recommend start with template1 -&gt; template2-&gt;template3 before going with template1-&gt;template1&#8230; model.</p>
<p>4) we need little bit more guide on how to enable debug log or how to handle exceptions.   ( following basic try/catch may helpful when debugging )<br />          //try {<br />                $(&#8220;#steps&#8221;).tmpl(data).appendTo( &#8220;#status&#8221; );<br />//} catch (e) {<br />//    console.dir(e);<br />//}</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-6955">
                    <div id="dsq-comment-header-6955" class="dsq-comment-header">
                        <cite id="dsq-cite-6955">
                                <span id="dsq-author-user-6955">Public</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-6955" class="dsq-comment-body">
                        <div id="dsq-comment-message-6955" class="dsq-comment-message"><p>bump on David Taylor&#39;s question&#8230; maybe we&#39;re both missing something obvious, but I&#39;m having a hell of a time figuring that out.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-7033">
                    <div id="dsq-comment-header-7033" class="dsq-comment-header">
                        <cite id="dsq-cite-7033">
    http://www.borismoore.com                            <span id="dsq-author-user-7033">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-7033" class="dsq-comment-body">
                        <div id="dsq-comment-message-7033" class="dsq-comment-message"><p>The tmplItem doesn&#39;t include a index property, by design, because if we had provided that, then we would have had to provide a way of ensuring that if you you delete or insert an item in the array, all indexes remain valid (for the items subsequent to the deleted or inserted one). </p>
<p>We want to allow you to remove/insert rendered template instances from the DOM when an item is deleted/inserted from the array, without forcing you to re-render all of the items. </p>
<p>So the recommended approach is to use $.inArray to determine the index in your own code. </p>
<p>See examples which do just that, such as : <a href="https://github.com/jquery/jquery-tmpl/blob/master/demos/samplesCore/parameters.html" rel="nofollow">https://github.com/jquery/jquery-tmpl/blob/master/demos/samplesCore/parameters.html</a></p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-7035">
                    <div id="dsq-comment-header-7035" class="dsq-comment-header">
                        <cite id="dsq-cite-7035">
    http://www.borismoore.com                            <span id="dsq-author-user-7035">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-7035" class="dsq-comment-body">
                        <div id="dsq-comment-message-7035" class="dsq-comment-message"><p>You are right, the issue was about spaces in the value. No, you should not have to use $data[&#39;companyName&#39;]. ${companyName} should work fine. (Following up also by email with ameya).</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-7086">
                    <div id="dsq-comment-header-7086" class="dsq-comment-header">
                        <cite id="dsq-cite-7086">
                                <span id="dsq-author-user-7086">Solai It</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-7086" class="dsq-comment-body">
                        <div id="dsq-comment-message-7086" class="dsq-comment-message"><p>Hi,</p>
<p>Inside the template i am having one table, there are five &#8220;td&#8221; elements but only 3 &#8220;td&#8221; elements only filled using database object. But i want the handler before and after rendering of all the five &#8220;td&#8221; elements. What can i do? How do i get any idea??</p>
<p>Previously i used MicrosoftAjaxtemplates in that i used like following </p>
<p>I just called &#8220;before&#8221; function before rendering the td element and called &#8220;after&#8221; function. Like this I need. Any idea??</p>
<p>Thanks in advance.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-7085">
                    <div id="dsq-comment-header-7085" class="dsq-comment-header">
                        <cite id="dsq-cite-7085">
                                <span id="dsq-author-user-7085">Solai It</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-7085" class="dsq-comment-body">
                        <div id="dsq-comment-message-7085" class="dsq-comment-message"><p>Hi, </p>
<p>Inside the template i am having one table, there are five &#8220;td&#8221; elements but only 3 &#8220;td&#8221; elements only filled using database object. But i want the handler before and after rendering of all the five &#8220;td&#8221; elements. What can i do? How do i get any idea?? </p>
<p>Previously i used MicrosoftAjaxtemplates in that i used like following </p>
<p>&lt;td sys:codebefore=&#8221;before()&#8221; sys:codeafter=&#8221;after()&gt;<br />
<br />&lt;/td&gt;<br />
<br />&lt;td sys:codebefore=&#8221;before()&#8221; sys:codeafter=&#8221;after()&gt;{{Name}}<br />
<br />&lt;/td&gt;<br />
<br />I just called &#8220;before&#8221; function before rendering the td element and called &#8220;after&#8221; function. Like this I need. Any idea?? </p>
<p>Thanks in advance.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-7270">
                    <div id="dsq-comment-header-7270" class="dsq-comment-header">
                        <cite id="dsq-cite-7270">
    http://www.borismoore.com                            <span id="dsq-author-user-7270">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-7270" class="dsq-comment-body">
                        <div id="dsq-comment-message-7270" class="dsq-comment-message"><p>Turns out this is because Ameya had a template in  a div, not a script tag.</p>
<p>In IE, the innerHTML of the div has attribute quotes removed when there is white space in the value, etc. So if you have `value=&#8221;${companyName}&#8221;` as an attribute value, and the value of companyName has white space in it, this breaks. </p>
<p>Workaround: <br />replace value=&#8221;${companyName}&#8221; by value=&#8221;${ companyName }&#8221;, <br />or better, wrap the template in a script tag, not a div.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-7346">
                    <div id="dsq-comment-header-7346" class="dsq-comment-header">
                        <cite id="dsq-cite-7346">
                                <span id="dsq-author-user-7346">Ivo</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-7346" class="dsq-comment-body">
                        <div id="dsq-comment-message-7346" class="dsq-comment-message"><p>Hi Boris, <br />Thanks for that useful plug-in</p>
<p>But I&#39;m having problem with invoking global object method from the template:</p>
<p>This works:</p>
<p>${MyGlobalFunc(myParam)}</p>
<p>This does not work, using Firebug, I can see that error:</p>
<p>${MyGlobalObject.MyMethod(myParam)}</p>
<p>illegal character<br /><a href="http://nje.github.com/jquery-tmpl/jquery.tmpl.js" rel="nofollow">http://nje.github.com/jquery-t&#8230;</a><br />Line 361</p>
<p>I don&#39;t want to wrap object method with global function. What to do?</p>
<p>Ivo</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-7572">
                    <div id="dsq-comment-header-7572" class="dsq-comment-header">
                        <cite id="dsq-cite-7572">
    http://www.borismoore.com                            <span id="dsq-author-user-7572">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-7572" class="dsq-comment-body">
                        <div id="dsq-comment-message-7572" class="dsq-comment-message"><p>See my <a href="http://api.jquery.com/jquery.tmpl/#comment-98013066" rel="nofollow">answer to David Taylor below</a>. That said, we will consider the trade-offs on this between the different scenarios. For the moment, we are staying with minimal implementation and covering all scenarios. (See details in my reply below).</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-7574">
                    <div id="dsq-comment-header-7574" class="dsq-comment-header">
                        <cite id="dsq-cite-7574">
    http://www.borismoore.com                            <span id="dsq-author-user-7574">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-7574" class="dsq-comment-body">
                        <div id="dsq-comment-message-7574" class="dsq-comment-message"><p>Looks like the issues here are because of using the same name for a data field data.abc, and the id of an element id=&#8221;abc&#8221;. Setting an id creates a global variable, at least for most browsers. {{if abc}} will then return true even if there is no $data.abc field for the current item.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-7576">
                    <div id="dsq-comment-header-7576" class="dsq-comment-header">
                        <cite id="dsq-cite-7576">
    http://www.borismoore.com                            <span id="dsq-author-user-7576">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-7576" class="dsq-comment-body">
                        <div id="dsq-comment-message-7576" class="dsq-comment-message"><p>You can use </p>
<p>      {{html before}}<br />      &lt;td&gt;${foo}&lt;/td&gt;<br />      {{html after}}</p>
<p>Where before and after return HTML strings, such as:<br />	function before() { return &#8220;&lt;td&gt;before&lt;/td&gt;&#8221;; }</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-7579">
                    <div id="dsq-comment-header-7579" class="dsq-comment-header">
                        <cite id="dsq-cite-7579">
    http://www.borismoore.com                            <span id="dsq-author-user-7579">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-7579" class="dsq-comment-body">
                        <div id="dsq-comment-message-7579" class="dsq-comment-message"><p>You are using nje.github. (That&#39;s the wrong repository). If you use the latest build from <a href="http://github.com/jquery/jquery-tmpl" rel="nofollow">http://github.com/jquery/jquery-tmpl</a> the second example should work. There was a bug on encoding of parameters which has now been fixed.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-8045">
                    <div id="dsq-comment-header-8045" class="dsq-comment-header">
                        <cite id="dsq-cite-8045">
    http://www.borismoore.com                            <span id="dsq-author-user-8045">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-8045" class="dsq-comment-body">
                        <div id="dsq-comment-message-8045" class="dsq-comment-message"><p>See my <a href="http://api.jquery.com/jquery.tmpl/#comment-98013066" rel="nofollow">answer to David Taylor below</a>. That said, we will consider the trade-offs on this between the different scenarios. For the moment, we are staying with minimal implementation and covering all scenarios. (See details in my reply below).</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-8044">
                    <div id="dsq-comment-header-8044" class="dsq-comment-header">
                        <cite id="dsq-cite-8044">
    http://www.borismoore.com                            <span id="dsq-author-user-8044">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-8044" class="dsq-comment-body">
                        <div id="dsq-comment-message-8044" class="dsq-comment-message"><p>Looks like the issues here are because of using the same name for a data field data.abc, and the id of an element id=&#8221;abc&#8221;. Setting an id creates a global variable, at least for most browsers. {{if abc}} will then return true even if there is no $data.abc field for the current item.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-8043">
                    <div id="dsq-comment-header-8043" class="dsq-comment-header">
                        <cite id="dsq-cite-8043">
    http://www.borismoore.com                            <span id="dsq-author-user-8043">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-8043" class="dsq-comment-body">
                        <div id="dsq-comment-message-8043" class="dsq-comment-message"><p>You can use </p>
<p>      {{html before}}<br />      &lt;td&gt;${foo}&lt;/td&gt;<br />      {{html after}}</p>
<p>Where before and after return HTML strings, such as:<br />	function before() { return &#8220;&lt;td&gt;before&lt;/td&gt;&#8221;; }</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-8042">
                    <div id="dsq-comment-header-8042" class="dsq-comment-header">
                        <cite id="dsq-cite-8042">
    http://www.borismoore.com                            <span id="dsq-author-user-8042">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-8042" class="dsq-comment-body">
                        <div id="dsq-comment-message-8042" class="dsq-comment-message"><p>You are using nje.github. (That&#39;s the wrong repository). If you use the latest build from <a href="http://github.com/jquery/jquery-tmpl" rel="nofollow">http://github.com/jquery/jquery-tmpl</a> the second example should work. There was a bug on encoding of parameters which has now been fixed.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-8108">
                    <div id="dsq-comment-header-8108" class="dsq-comment-header">
                        <cite id="dsq-cite-8108">
                                <span id="dsq-author-user-8108">Hemant Cse31</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-8108" class="dsq-comment-body">
                        <div id="dsq-comment-message-8108" class="dsq-comment-message"><p>Thanks for super duper plugin, In my case sms section was repeated now it&#39;s solved thanks<br />maza aa gaya</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-8255">
                    <div id="dsq-comment-header-8255" class="dsq-comment-header">
                        <cite id="dsq-cite-8255">
                                <span id="dsq-author-user-8255">Gediminas</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-8255" class="dsq-comment-body">
                        <div id="dsq-comment-message-8255" class="dsq-comment-message"><p>Moore, it would be beneficial if .appendTo could accept jQuery object &#8211; not only selector <img src='http://api.jquery.com/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> </p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-8630">
                    <div id="dsq-comment-header-8630" class="dsq-comment-header">
                        <cite id="dsq-cite-8630">
                                <span id="dsq-author-user-8630">GazzaH</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-8630" class="dsq-comment-body">
                        <div id="dsq-comment-message-8630" class="dsq-comment-message"><p>Would it be possible to add an .html option to the existing <br />.appendTo, .prependTo, .insertAfter or .insertBefore.<br />I need to swap out the entire contents of a DOm element with the rendered template.</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-8657">
                    <div id="dsq-comment-header-8657" class="dsq-comment-header">
                        <cite id="dsq-cite-8657">
    http://twitter.com/danwellman                            <span id="dsq-author-user-8657">Dan Wellman</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-8657" class="dsq-comment-body">
                        <div id="dsq-comment-message-8657" class="dsq-comment-message"><p>Here&#39;s a tip, don&#39;t use the word &#39;class&#39; as a property name or it will throw &#39;Parser errors&#39; in Safari and IE</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-8693">
                    <div id="dsq-comment-header-8693" class="dsq-comment-header">
                        <cite id="dsq-cite-8693">
    http://hypergraphs.de/                            <span id="dsq-author-user-8693">Axel Rauschmayer</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-8693" class="dsq-comment-body">
                        <div id="dsq-comment-message-8693" class="dsq-comment-message"><p>This problem mostly went away with the the new {{each}} and $index, right? $.inArray strikes me as unsafe in some cases, as it would not work with, say, duplicate strings in an array.</p>
<p>What remains is that it is hard to detect the last element. This is needed for inserting separators. You can prefix the separator before each element and only show it if $index &gt; 0, but that is less elegant. It would be nice to have an additional $isLast as a parameter or (similar to Array.forEach() is ECMAScript 5) the complete array.</p>
<p>I have found a clean work-around for this problem: <a href="http://www.2ality.com/2011/01/jquery-templates-quick-start-and-tips.html" rel="nofollow">http://www.2ality.com/2011/01/&#8230;</a></p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-8733">
                    <div id="dsq-comment-header-8733" class="dsq-comment-header">
                        <cite id="dsq-cite-8733">
    http://www.borismoore.com                            <span id="dsq-author-user-8733">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-8733" class="dsq-comment-body">
                        <div id="dsq-comment-message-8733" class="dsq-comment-message"><p>You should not use any javascript reserved word for the field name of an object. If you need to do so, you can work around this by doing, for example:<br />${$data["class"]}</p>
<p>${class} will not work, for reserved words&#8230;</p>
</div>
                    </div>
                </li>
                    <li id="dsq-comment-8734">
                    <div id="dsq-comment-header-8734" class="dsq-comment-header">
                        <cite id="dsq-cite-8734">
    http://www.borismoore.com                            <span id="dsq-author-user-8734">Boris Moore</span>
                            </cite>
                    </div>
                    <div id="dsq-comment-body-8734" class="dsq-comment-body">
                        <div id="dsq-comment-message-8734" class="dsq-comment-message"><p>You can use appendTo, for example, but call empty() first. For example:</p>
<p>    $( &#8220;#container&#8221; ).empty();<br />    $( &#8220;#myTemplate&#8221; ).tmpl( data ).appendTo( &#8220;#container&#8221; ); </p>
<p>You can also do</p>
<p>    $( &#8220;#myTemplate&#8221; ).tmpl( data ).appendTo( $( &#8220;#container&#8221;).empty() ); </p>
</div>
                    </div>
                </li>
                </ul>
        </div>
    </div>

<script type="text/javascript">
/* <![CDATA[ */
    var disqus_url = 'http://api.jquery.com/jquery.tmpl/';
    var disqus_identifier = '2355 http://api.jquery.com/?p=2355';
    var disqus_container_id = 'disqus_thread';
    var disqus_domain = 'disqus.com';
    var disqus_shortname = 'jquery';
    var disqus_title = "jQuery.tmpl()";
        var disqus_config = function () {
        var config = this; // Access to the config object

        /* 
           All currently supported events:
            * preData — fires just before we request for initial data
            * preInit - fires after we get initial data but before we load any dependencies
            * onInit  - fires when all dependencies are resolved but before dtpl template is rendered
            * afterRender - fires when template is rendered but before we show it
            * onReady - everything is done
         */

        config.callbacks.preData.push(function() {
            // clear out the container (its filled for SEO/legacy purposes)
            document.getElementById(disqus_container_id).innerHTML = '';
        });
                config.callbacks.onReady.push(function() {
            // sync comments in the background so we don't block the page
            DISQUS.request.get('?cf_action=sync_comments&post_id=2355');
        });
                    };
    var facebookXdReceiverPath = 'http://api.jquery.com/wp-content/plugins/disqus-comment-system/xd_receiver.htm';
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
    var DsqLocal = {
        'trackbacks': [
        ],
        'trackback_url': "http:\/\/api.jquery.com\/jquery.tmpl\/trackback\/"    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = 'http://' + disqus_shortname + '.' + disqus_domain + '/embed.js?pname=wordpress&pver=2.67';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
/* ]]> */
</script>
</div>
</div>
    </div><!-- #content -->
  </div><!-- #jq-primaryContent -->

  <div id="jq-interiorNavigation" >
    <h2 class="jq-clearfix roundTop section-title"><a href="/">jQuery API</a></h2>
    <div class="roundBottom jq-box">
      <ul class="xoxo">
        <li>
          <ul>
            <li><a href="http://api.jquery.com/category/version/1.7/">New or Changed in 1.7</a></li>
            <li><a href="http://api.jquery.com/api/" >Raw XML API Dump</a></li>
            <li><a href="http://api.jquery.com/browser/">Dynamic API Browser</a></li>
            <li><a href="http://www.packtpub.com/jquery-1-4-reference-guide/book">jQuery API Book</a></li>
          </ul>
      </ul>
<!--
      <br />
      <div class="sideBarFeature">
        <strong>Dynamic API Browser</strong>
        <a href="http://api.jquery.com/browser/" style="border:0px;"><img src="http://static.jquery.com/api/images/badge.jpg" style="border:0px;width:100%;"/></a>
      </div>
      <div class="sideBarFeature">
        <strong>jQuery API Book</strong>
        <a href="http://www.packtpub.com/" style="border-width:0;"><img src="http://static.jquery.com/books/jquery-ref-guide.png" style="border-width:0;"/></a>
      </div>
-->
    </div>

    <h2 class="jq-clearfix roundTop section-title">Browse the jQuery API</h2>
    <div class="roundBottom jq-box">
    <ul class="xoxo">

      <li id="categories">
        <ul>
        <li><a href="/">All</a></li>
	<li class="cat-item cat-item-13"><a href="http://api.jquery.com/category/ajax/" title="View all posts filed under Ajax">Ajax</a>
<ul class='children'>
	<li class="cat-item cat-item-39"><a href="http://api.jquery.com/category/ajax/global-ajax-event-handlers/" title="View all posts filed under Global Ajax Event Handlers">Global Ajax Event Handlers</a>
</li>
	<li class="cat-item cat-item-40"><a href="http://api.jquery.com/category/ajax/helper-functions/" title="View all posts filed under Helper Functions">Helper Functions</a>
</li>
	<li class="cat-item cat-item-37"><a href="http://api.jquery.com/category/ajax/low-level-interface/" title="View all posts filed under Low-Level Interface">Low-Level Interface</a>
</li>
	<li class="cat-item cat-item-38"><a href="http://api.jquery.com/category/ajax/shorthand-methods/" title="View all posts filed under Shorthand Methods">Shorthand Methods</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-7"><a href="http://api.jquery.com/category/attributes/" title="View all posts filed under Attributes">Attributes</a>
</li>
	<li class="cat-item cat-item-99"><a href="http://api.jquery.com/category/callbacks-object/" title="View all posts filed under Callbacks Object">Callbacks Object</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://api.jquery.com/category/core/" title="View all posts filed under Core">Core</a>
</li>
	<li class="cat-item cat-item-10"><a href="http://api.jquery.com/category/css/" title="View all posts filed under CSS">CSS</a>
</li>
	<li class="cat-item cat-item-51"><a href="http://api.jquery.com/category/data/" title="View all posts filed under Data">Data</a>
</li>
	<li class="cat-item cat-item-93"><a href="http://api.jquery.com/category/deferred-object/" title="View all posts filed under Deferred Object">Deferred Object</a>
</li>
	<li class="cat-item cat-item-97"><a href="http://api.jquery.com/category/deprecated/" title="View all posts filed under Deprecated">Deprecated</a>
</li>
	<li class="cat-item cat-item-50"><a href="http://api.jquery.com/category/dimensions/" title="View all posts filed under Dimensions">Dimensions</a>
</li>
	<li class="cat-item cat-item-12"><a href="http://api.jquery.com/category/effects/" title="View all posts filed under Effects">Effects</a>
<ul class='children'>
	<li class="cat-item cat-item-52"><a href="http://api.jquery.com/category/effects/basics/" title="View all posts filed under Basics">Basics</a>
</li>
	<li class="cat-item cat-item-55"><a href="http://api.jquery.com/category/effects/custom-effects/" title="View all posts filed under Custom">Custom</a>
</li>
	<li class="cat-item cat-item-54"><a href="http://api.jquery.com/category/effects/fading/" title="View all posts filed under Fading">Fading</a>
</li>
	<li class="cat-item cat-item-53"><a href="http://api.jquery.com/category/effects/sliding/" title="View all posts filed under Sliding">Sliding</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-11"><a href="http://api.jquery.com/category/events/" title="View all posts filed under Events">Events</a>
<ul class='children'>
	<li class="cat-item cat-item-36"><a href="http://api.jquery.com/category/events/browser-events/" title="View all posts filed under Browser Events">Browser Events</a>
</li>
	<li class="cat-item cat-item-32"><a href="http://api.jquery.com/category/events/document-loading/" title="View all posts filed under Document Loading">Document Loading</a>
</li>
	<li class="cat-item cat-item-31"><a href="http://api.jquery.com/category/events/event-handler-attachment/" title="View all posts filed under Event Handler Attachment">Event Handler Attachment</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://api.jquery.com/category/events/event-object/" title="View all posts filed under Event Object">Event Object</a>
</li>
	<li class="cat-item cat-item-34"><a href="http://api.jquery.com/category/events/form-events/" title="View all posts filed under Form Events">Form Events</a>
</li>
	<li class="cat-item cat-item-35"><a href="http://api.jquery.com/category/events/keyboard-events/" title="View all posts filed under Keyboard Events">Keyboard Events</a>
</li>
	<li class="cat-item cat-item-33"><a href="http://api.jquery.com/category/events/mouse-events/" title="View all posts filed under Mouse Events">Mouse Events</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-56"><a href="http://api.jquery.com/category/forms/" title="View all posts filed under Forms">Forms</a>
</li>
	<li class="cat-item cat-item-67"><a href="http://api.jquery.com/category/internals/" title="View all posts filed under Internals">Internals</a>
</li>
	<li class="cat-item cat-item-9"><a href="http://api.jquery.com/category/manipulation/" title="View all posts filed under Manipulation">Manipulation</a>
<ul class='children'>
	<li class="cat-item cat-item-25"><a href="http://api.jquery.com/category/manipulation/class-attribute/" title="View all posts filed under Class Attribute">Class Attribute</a>
</li>
	<li class="cat-item cat-item-29"><a href="http://api.jquery.com/category/manipulation/copying/" title="View all posts filed under Copying">Copying</a>
</li>
	<li class="cat-item cat-item-28"><a href="http://api.jquery.com/category/manipulation/dom-insertion-around/" title="View all posts filed under DOM Insertion, Around">DOM Insertion, Around</a>
</li>
	<li class="cat-item cat-item-27"><a href="http://api.jquery.com/category/manipulation/dom-insertion-inside/" title="View all posts filed under DOM Insertion, Inside">DOM Insertion, Inside</a>
</li>
	<li class="cat-item cat-item-48"><a href="http://api.jquery.com/category/manipulation/dom-insertion-outside/" title="View all posts filed under DOM Insertion, Outside">DOM Insertion, Outside</a>
</li>
	<li class="cat-item cat-item-30"><a href="http://api.jquery.com/category/manipulation/dom-removal/" title="View all posts filed under DOM Removal">DOM Removal</a>
</li>
	<li class="cat-item cat-item-26"><a href="http://api.jquery.com/category/manipulation/dom-replacement/" title="View all posts filed under DOM Replacement">DOM Replacement</a>
</li>
	<li class="cat-item cat-item-23"><a href="http://api.jquery.com/category/manipulation/general-attributes/" title="View all posts filed under General Attributes">General Attributes</a>
</li>
	<li class="cat-item cat-item-24"><a href="http://api.jquery.com/category/manipulation/style-properties/" title="View all posts filed under Style Properties">Style Properties</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-41"><a href="http://api.jquery.com/category/miscellaneous/" title="View all posts filed under Miscellaneous">Miscellaneous</a>
<ul class='children'>
	<li class="cat-item cat-item-44"><a href="http://api.jquery.com/category/miscellaneous/collection-manipulation/" title="View all posts filed under Collection Manipulation">Collection Manipulation</a>
</li>
	<li class="cat-item cat-item-45"><a href="http://api.jquery.com/category/miscellaneous/data-storage/" title="View all posts filed under Data Storage">Data Storage</a>
</li>
	<li class="cat-item cat-item-43"><a href="http://api.jquery.com/category/miscellaneous/dom-element-methods/" title="View all posts filed under DOM Element Methods">DOM Element Methods</a>
</li>
	<li class="cat-item cat-item-42"><a href="http://api.jquery.com/category/miscellaneous/setup-methods/" title="View all posts filed under Setup Methods">Setup Methods</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-49"><a href="http://api.jquery.com/category/offset/" title="View all posts filed under Offset">Offset</a>
</li>
	<li class="cat-item cat-item-85"><a href="http://api.jquery.com/category/plugins/" title="View all posts filed under Plugins">Plugins</a>
<ul class='children'>
	<li class="cat-item cat-item-87"><a href="http://api.jquery.com/category/plugins/data-link/" title="View all posts filed under Data Link">Data Link</a>
</li>
	<li class="cat-item cat-item-83"><a href="http://api.jquery.com/category/plugins/templates/" title="View all posts filed under Templates">Templates</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-68"><a href="http://api.jquery.com/category/properties/" title="View all posts filed under Properties">Properties</a>
<ul class='children'>
	<li class="cat-item cat-item-59"><a href="http://api.jquery.com/category/properties/jquery-object-instance-properties/" title="View all posts filed under Properties of jQuery Object Instances">Properties of jQuery Object Instances</a>
</li>
	<li class="cat-item cat-item-58"><a href="http://api.jquery.com/category/properties/global-jquery-object-properties/" title="View all posts filed under Properties of the Global jQuery Object">Properties of the Global jQuery Object</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-6"><a href="http://api.jquery.com/category/selectors/" title="View all posts filed under Selectors">Selectors</a>
<ul class='children'>
	<li class="cat-item cat-item-17"><a href="http://api.jquery.com/category/selectors/attribute-selectors/" title="View all posts filed under Attribute">Attribute</a>
</li>
	<li class="cat-item cat-item-16"><a href="http://api.jquery.com/category/selectors/basic-css-selectors/" title="View all posts filed under Basic">Basic</a>
</li>
	<li class="cat-item cat-item-61"><a href="http://api.jquery.com/category/selectors/basic-filter-selectors/" title="View all posts filed under Basic Filter">Basic Filter</a>
</li>
	<li class="cat-item cat-item-65"><a href="http://api.jquery.com/category/selectors/child-filter-selectors/" title="View all posts filed under Child Filter">Child Filter</a>
</li>
	<li class="cat-item cat-item-62"><a href="http://api.jquery.com/category/selectors/content-filter-selector/" title="View all posts filed under Content Filter">Content Filter</a>
</li>
	<li class="cat-item cat-item-18"><a href="http://api.jquery.com/category/selectors/form-selectors/" title="View all posts filed under Form">Form</a>
</li>
	<li class="cat-item cat-item-60"><a href="http://api.jquery.com/category/selectors/hierarchy-selectors/" title="View all posts filed under Hierarchy">Hierarchy</a>
</li>
	<li class="cat-item cat-item-96"><a href="http://api.jquery.com/category/selectors/jquery-selector-extensions/" title="View all posts filed under jQuery Extensions">jQuery Extensions</a>
</li>
	<li class="cat-item cat-item-63"><a href="http://api.jquery.com/category/selectors/visibility-filter-selectors/" title="View all posts filed under Visibility Filter">Visibility Filter</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-8"><a href="http://api.jquery.com/category/traversing/" title="View all posts filed under Traversing">Traversing</a>
<ul class='children'>
	<li class="cat-item cat-item-20"><a href="http://api.jquery.com/category/traversing/filtering/" title="View all posts filed under Filtering">Filtering</a>
</li>
	<li class="cat-item cat-item-22"><a href="http://api.jquery.com/category/traversing/miscellaneous-traversal/" title="View all posts filed under Miscellaneous Traversing">Miscellaneous Traversing</a>
</li>
	<li class="cat-item cat-item-21"><a href="http://api.jquery.com/category/traversing/tree-traversal/" title="View all posts filed under Tree Traversal">Tree Traversal</a>
</li>
</ul>
</li>
	<li class="cat-item cat-item-14"><a href="http://api.jquery.com/category/utilities/" title="View all posts filed under Utilities">Utilities</a>
</li>
	<li class="cat-item cat-item-69"><a href="http://api.jquery.com/category/version/" title="View all posts filed under Version">Version</a>
<ul class='children'>
	<li class="cat-item cat-item-70"><a href="http://api.jquery.com/category/version/1.0/" title="View all posts filed under Version 1.0">Version 1.0</a>
</li>
	<li class="cat-item cat-item-71"><a href="http://api.jquery.com/category/version/1.0.4/" title="View all posts filed under Version 1.0.4">Version 1.0.4</a>
</li>
	<li class="cat-item cat-item-72"><a href="http://api.jquery.com/category/version/1.1/" title="View all posts filed under Version 1.1">Version 1.1</a>
</li>
	<li class="cat-item cat-item-73"><a href="http://api.jquery.com/category/version/1.1.2/" title="View all posts filed under Version 1.1.2">Version 1.1.2</a>
</li>
	<li class="cat-item cat-item-74"><a href="http://api.jquery.com/category/version/1.1.3/" title="View all posts filed under Version 1.1.3">Version 1.1.3</a>
</li>
	<li class="cat-item cat-item-75"><a href="http://api.jquery.com/category/version/1.1.4/" title="View all posts filed under Version 1.1.4">Version 1.1.4</a>
</li>
	<li class="cat-item cat-item-76"><a href="http://api.jquery.com/category/version/1.2/" title="View all posts filed under Version 1.2">Version 1.2</a>
</li>
	<li class="cat-item cat-item-77"><a href="http://api.jquery.com/category/version/1.2.3/" title="View all posts filed under Version 1.2.3">Version 1.2.3</a>
</li>
	<li class="cat-item cat-item-78"><a href="http://api.jquery.com/category/version/1.2.6/" title="View all posts filed under Version 1.2.6">Version 1.2.6</a>
</li>
	<li class="cat-item cat-item-79"><a href="http://api.jquery.com/category/version/1.3/" title="View all posts filed under Version 1.3">Version 1.3</a>
</li>
	<li class="cat-item cat-item-80"><a href="http://api.jquery.com/category/version/1.4/" title="View all posts filed under Version 1.4">Version 1.4</a>
</li>
	<li class="cat-item cat-item-81"><a href="http://api.jquery.com/category/version/1.4.1/" title="View all posts filed under Version 1.4.1">Version 1.4.1</a>
</li>
	<li class="cat-item cat-item-82"><a href="http://api.jquery.com/category/version/1.4.2/" title="View all posts filed under Version 1.4.2">Version 1.4.2</a>
</li>
	<li class="cat-item cat-item-90"><a href="http://api.jquery.com/category/version/1.4.3/" title="View all posts filed under Version 1.4.3">Version 1.4.3</a>
</li>
	<li class="cat-item cat-item-91"><a href="http://api.jquery.com/category/version/1.4.4/" title="View all posts filed under Version 1.4.4">Version 1.4.4</a>
</li>
	<li class="cat-item cat-item-92"><a href="http://api.jquery.com/category/version/1.5/" title="View all posts filed under Version 1.5">Version 1.5</a>
</li>
	<li class="cat-item cat-item-94"><a href="http://api.jquery.com/category/version/1.5.1/" title="View all posts filed under Version 1.5.1">Version 1.5.1</a>
</li>
	<li class="cat-item cat-item-95"><a href="http://api.jquery.com/category/version/1.6/" title="View all posts filed under Version 1.6">Version 1.6</a>
</li>
	<li class="cat-item cat-item-98"><a href="http://api.jquery.com/category/version/1.7/" title="View all posts filed under Version 1.7">Version 1.7</a>
</li>
</ul>
</li>
        </ul>
      </li>

  </ul>
  </div>
  </div><!-- #jq-interiorNavigation -->
  </div><!-- /#secondaryNavigation -->

  <div id="jq-footer" class="jq-clearfix">
    <div id="jq-credits">
<p id="jq-copyright">&copy; 2010 <a href="http://jquery.org/">The jQuery Project</a></p>
<p id="jq-hosting">Sponsored by <a href="http://mediatemple.net" class="jq-mediaTemple">Media Temple</a> and <a href="http://jquery.org/sponsors">others</a>.</p>
    </div>
  
    <div id="jq-footerNavigation">
      <ul>
        <li class="jq-download jq-first"><a href="http://docs.jquery.com/Downloading_jQuery">Download</a></li>
        <li class="jq-documentation"><a href="http://docs.jquery.com">Documentation</a></li>
        <li class="jq-tutorials"><a href="http://docs.jquery.com/Tutorials">Tutorials</a></li>
        <li class="jq-bugTracker"><a href="http://dev.jquery.com/">Bug Tracker</a></li>
        <li class="jq-discussion jq-last"><a href="http://docs.jquery.com/Discussion">Discussion</a></li>
      </ul>
    </div><!-- /#jq-footerNavigation -->
  </div><!-- /#jq-footer -->
</div><!-- /#siteContain -->

<script type="text/javascript">
var _gaq = _gaq || []; _gaq.push(['_setAccount', 'UA-1076265-1']); _gaq.push(['_trackPageview']); _gaq.push(['_setDomainName', '.jquery.com']);
(function() {var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);})();
</script>

  <script src="http://static.jquery.com/api/prettify.js"></script>
  <!-- <script src="/wp-content/themes/jquery.0002/demos.js?v=20110228"></script> -->
  <script src="http://static.jquery.com/api/demo.js?v=20110228"></script>
</body>
</html>

<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Page Caching using disk: basic
Database Caching 1/7 queries in 0.008 seconds using disk: basic
Object Caching 919/978 objects using disk: basic

Served from: api.jquery.com @ 2011-11-08 06:51:02 -->